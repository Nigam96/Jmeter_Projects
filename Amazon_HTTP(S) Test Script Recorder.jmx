<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="amazon" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="HomePage" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-162" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OE/-163" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rid&quot;:&quot;AAMY482BDTBT2NBW4Y2K&quot;,&quot;sid&quot;:&quot;257-6224871-8744968&quot;,&quot;mid&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;sn&quot;:&quot;www.amazon.in&quot;,&quot;reqs&quot;:[{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:1,&quot;t&quot;:33651}},{&quot;cel&quot;:{&quot;w&quot;:1263,&quot;h&quot;:6115,&quot;t&quot;:33669,&quot;k&quot;:&quot;doi&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:2,&quot;t&quot;:33854}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:1,&quot;t&quot;:33986}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:3,&quot;t&quot;:34022}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:4,&quot;t&quot;:34425}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:5,&quot;t&quot;:34445}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:6,&quot;t&quot;:34525}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:7,&quot;t&quot;:34717}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:8,&quot;t&quot;:34744}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:876,&quot;y&quot;:543,&quot;t&quot;:34293},{&quot;x&quot;:1252,&quot;y&quot;:574,&quot;t&quot;:34372},{&quot;x&quot;:1249,&quot;y&quot;:563,&quot;t&quot;:34456}],&quot;min&quot;:0,&quot;max&quot;:0,&quot;avg&quot;:0}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:9,&quot;t&quot;:34893}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:10,&quot;t&quot;:34915}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:11,&quot;t&quot;:35143}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:12,&quot;t&quot;:35444}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-top-lazy-cards&quot;,&quot;value&quot;:10,&quot;t&quot;:35640}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-top-lazy&quot;,&quot;value&quot;:1,&quot;t&quot;:35640}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:13,&quot;t&quot;:35653}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:14,&quot;t&quot;:35794}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:15,&quot;t&quot;:35817}},{&quot;cel&quot;:{&quot;k&quot;:&quot;ebl&quot;,&quot;t&quot;:35934,&quot;s&quot;:&quot;default&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:16,&quot;t&quot;:35957}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-1-lazy-cards&quot;,&quot;value&quot;:9,&quot;t&quot;:37949}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-1-lazy&quot;,&quot;value&quot;:1,&quot;t&quot;:37950}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:17,&quot;t&quot;:37966}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:18,&quot;t&quot;:37974}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:19,&quot;t&quot;:37981}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:38065}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:20,&quot;t&quot;:38105}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-2-lazy-cards&quot;,&quot;value&quot;:6,&quot;t&quot;:38113}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-2-lazy&quot;,&quot;value&quot;:1,&quot;t&quot;:38114}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:21,&quot;t&quot;:38115}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-3-lazy-cards&quot;,&quot;value&quot;:6,&quot;t&quot;:38117}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-3-lazy&quot;,&quot;value&quot;:1,&quot;t&quot;:38117}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:22,&quot;t&quot;:38120}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-4-lazy-cards&quot;,&quot;value&quot;:11,&quot;t&quot;:38122}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-4-lazy&quot;,&quot;value&quot;:1,&quot;t&quot;:38122}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:23,&quot;t&quot;:38126}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-5-lazy-cards&quot;,&quot;value&quot;:18,&quot;t&quot;:38131}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-5-lazy&quot;,&quot;value&quot;:1,&quot;t&quot;:38131}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:24,&quot;t&quot;:38135}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-6-lazy-cards&quot;,&quot;value&quot;:13,&quot;t&quot;:38141}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-6-lazy&quot;,&quot;value&quot;:1,&quot;t&quot;:38141}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:25,&quot;t&quot;:38145}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-7-lazy-cards&quot;,&quot;value&quot;:23,&quot;t&quot;:38148}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-desktop-7-lazy&quot;,&quot;value&quot;:1,&quot;t&quot;:38148}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:595,&quot;y&quot;:591,&quot;t&quot;:34967},{&quot;x&quot;:595,&quot;y&quot;:593,&quot;t&quot;:35092}],&quot;min&quot;:0,&quot;max&quot;:0,&quot;avg&quot;:0}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:26,&quot;t&quot;:38485}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:45120}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:27,&quot;t&quot;:45702}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:28,&quot;t&quot;:47196}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:29,&quot;t&quot;:49421}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;HeadLatency:desktop&quot;,&quot;value&quot;:15768,&quot;t&quot;:49754}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;shovelerNotEnoughItem&quot;,&quot;value&quot;:30,&quot;t&quot;:50390}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:55369}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:httperror:Gateway:right-2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:61752}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:httperror:589e332a-17d0-4382-b320-05e6f4ddc521&quot;,&quot;value&quot;:1,&quot;t&quot;:61753}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:safeFrameError&quot;,&quot;value&quot;:1,&quot;t&quot;:61753}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:handleFallbackBehavior&quot;,&quot;value&quot;:1,&quot;t&quot;:61753}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:handleFallbackBehavior:Gateway:right-2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:61753}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:handleFallbackBehavior:589e332a-17d0-4382-b320-05e6f4ddc521&quot;,&quot;value&quot;:1,&quot;t&quot;:61753}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:forceFallback&quot;,&quot;value&quot;:1,&quot;t&quot;:61754}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:forceFallback:Gateway:right-2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:61754}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:forceFallback:589e332a-17d0-4382-b320-05e6f4ddc521&quot;,&quot;value&quot;:1,&quot;t&quot;:61754}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Gateway:right-2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:61758}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:589e332a-17d0-4382-b320-05e6f4ddc521&quot;,&quot;value&quot;:1,&quot;t&quot;:61758}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:httperror:Gateway:desktop-ad-center-1:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:61785}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfetch:httperror:e44985f6-46f4-4231-90aa-f5c16f7c50aa&quot;,&quot;value&quot;:1,&quot;t&quot;:61785}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:safeFrameError&quot;,&quot;value&quot;:1,&quot;t&quot;:61785}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:handleFallbackBehavior&quot;,&quot;value&quot;:1,&quot;t&quot;:61785}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:handleFallbackBehavior:Gateway:desktop-ad-center-1:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:61785}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:handleFallbackBehavior:e44985f6-46f4-4231-90aa-f5c16f7c50aa&quot;,&quot;value&quot;:1,&quot;t&quot;:61785}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:forceFallback&quot;,&quot;value&quot;:1,&quot;t&quot;:61785}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:forceFallback:Gateway:desktop-ad-center-1:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:61785}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:messenger:forceFallback:e44985f6-46f4-4231-90aa-f5c16f7c50aa&quot;,&quot;value&quot;:1,&quot;t&quot;:61785}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:Gateway:desktop-ad-center-1:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:61785}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adfeedback:request:e44985f6-46f4-4231-90aa-f5c16f7c50aa&quot;,&quot;value&quot;:1,&quot;t&quot;:61785}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Gateway:right-2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:64099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:589e332a-17d0-4382-b320-05e6f4ddc521&quot;,&quot;value&quot;:1,&quot;t&quot;:64099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Gateway:right-2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:64099}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:589e332a-17d0-4382-b320-05e6f4ddc521&quot;,&quot;value&quot;:1,&quot;t&quot;:64099}},{&quot;cel&quot;:{&quot;k&quot;:&quot;efo&quot;,&quot;t&quot;:67861,&quot;s&quot;:&quot;pageviz&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:Gateway:desktop-ad-center-1:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:68433}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sflibrary:cached:e44985f6-46f4-4231-90aa-f5c16f7c50aa&quot;,&quot;value&quot;:1,&quot;t&quot;:68434}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:Gateway:desktop-ad-center-1:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:68434}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:cache:sfhtml:cached:e44985f6-46f4-4231-90aa-f5c16f7c50aa&quot;,&quot;value&quot;:1,&quot;t&quot;:68434}},{&quot;cel&quot;:{&quot;k&quot;:&quot;ebl&quot;,&quot;t&quot;:70112,&quot;s&quot;:&quot;pageviz&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:70670}},{&quot;cel&quot;:{&quot;k&quot;:&quot;efo&quot;,&quot;t&quot;:70710,&quot;s&quot;:&quot;pageviz&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;ebl&quot;,&quot;t&quot;:72125,&quot;s&quot;:&quot;pageviz&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:93491}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:123865}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:556,&quot;t&quot;:124247}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:190,&quot;t&quot;:124285}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:182,&quot;t&quot;:124296}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:182,&quot;t&quot;:124309}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:184,&quot;t&quot;:124313}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:186,&quot;t&quot;:124317}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:178,&quot;t&quot;:124330}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:184,&quot;t&quot;:124333}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:658,&quot;t&quot;:124345}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TimeUpTo:ATF:desktop&quot;,&quot;value&quot;:396,&quot;t&quot;:126899}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TimeUpTo:CF:desktop&quot;,&quot;value&quot;:410,&quot;t&quot;:126912}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TimeUpTo:PageLoaded:desktop&quot;,&quot;value&quot;:418,&quot;t&quot;:126916}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;NavJS:TotalCallCount:PageLoaded:desktop&quot;,&quot;value&quot;:1028,&quot;t&quot;:126916}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:network:D:desktop&quot;,&quot;value&quot;:4,&quot;t&quot;:126917}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:navFirstPaint:D:desktop&quot;,&quot;value&quot;:36995,&quot;t&quot;:126918}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavStart:C:desktop&quot;,&quot;value&quot;:27410,&quot;t&quot;:126919}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintStart:D:desktop&quot;,&quot;value&quot;:27410,&quot;t&quot;:126919}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintStart:C:desktop&quot;,&quot;value&quot;:27410,&quot;t&quot;:126920}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainStart:D:desktop&quot;,&quot;value&quot;:27410,&quot;t&quot;:126923}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainStart:C:desktop&quot;,&quot;value&quot;:27410,&quot;t&quot;:126924}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:PreNav:D:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:126924}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:PreNav:C:desktop&quot;,&quot;value&quot;:27411,&quot;t&quot;:126924}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:UpNav:D:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:126924}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:UpNav:C:desktop&quot;,&quot;value&quot;:27412,&quot;t&quot;:126924}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Logo:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:126924}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Logo:C:desktop&quot;,&quot;value&quot;:27412,&quot;t&quot;:126925}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Search:D:desktop&quot;,&quot;value&quot;:2,&quot;t&quot;:126925}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Search:C:desktop&quot;,&quot;value&quot;:27415,&quot;t&quot;:126925}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Tools:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:126926}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:Tools:C:desktop&quot;,&quot;value&quot;:27415,&quot;t&quot;:126926}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:HamburgerMenuIcon:D:desktop&quot;,&quot;value&quot;:2,&quot;t&quot;:126926}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:HamburgerMenuIcon:C:desktop&quot;,&quot;value&quot;:27417,&quot;t&quot;:126926}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:CrossShop:D:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:126926}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:CrossShop:C:desktop&quot;,&quot;value&quot;:27418,&quot;t&quot;:126926}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:SWM:D:desktop&quot;,&quot;value&quot;:0,&quot;t&quot;:126927}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:SWM:C:desktop&quot;,&quot;value&quot;:27418,&quot;t&quot;:126927}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavBar:D:desktop&quot;,&quot;value&quot;:6,&quot;t&quot;:126927}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavBar:C:desktop&quot;,&quot;value&quot;:27418,&quot;t&quot;:126927}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainPaintEnd:D:desktop&quot;,&quot;value&quot;:27418,&quot;t&quot;:126928}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainPaintEnd:C:desktop&quot;,&quot;value&quot;:27418,&quot;t&quot;:126928}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintEnd:D:desktop&quot;,&quot;value&quot;:27418,&quot;t&quot;:126928}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavFirstPaintEnd:C:desktop&quot;,&quot;value&quot;:27418,&quot;t&quot;:126928}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainEnd:D:desktop&quot;,&quot;value&quot;:27427,&quot;t&quot;:126928}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:CSM:Latency:NavMainEnd:C:desktop&quot;,&quot;value&quot;:27427,&quot;t&quot;:126928}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-icp-attach-latency&quot;,&quot;value&quot;:99504,&quot;t&quot;:126931}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;nav-flyout-icp-footer-flyout-attach-latency&quot;,&quot;value&quot;:99518,&quot;t&quot;:126945}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:sw:sw_message_no_ctrl&quot;,&quot;value&quot;:1,&quot;t&quot;:127969}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-inst-img&quot;,&quot;value&quot;:1,&quot;t&quot;:127971}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:1,&quot;t&quot;:127973}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:2,&quot;t&quot;:127974}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-atf-img&quot;,&quot;value&quot;:1,&quot;t&quot;:127976}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:2,&quot;t&quot;:127980}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:3,&quot;t&quot;:127984}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:3,&quot;t&quot;:127987}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:4,&quot;t&quot;:127989}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:4,&quot;t&quot;:127990}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:5,&quot;t&quot;:127991}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:5,&quot;t&quot;:127999}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:6,&quot;t&quot;:128001}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:6,&quot;t&quot;:128009}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:7,&quot;t&quot;:128011}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:7,&quot;t&quot;:128016}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:8,&quot;t&quot;:128021}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:8,&quot;t&quot;:128025}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:9,&quot;t&quot;:128027}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:9,&quot;t&quot;:128030}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:10,&quot;t&quot;:128031}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:10,&quot;t&quot;:128037}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:11,&quot;t&quot;:128039}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:11,&quot;t&quot;:128041}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:12,&quot;t&quot;:128042}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:12,&quot;t&quot;:128045}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:13,&quot;t&quot;:128045}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:13,&quot;t&quot;:128047}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:14,&quot;t&quot;:128048}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:14,&quot;t&quot;:128055}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:15,&quot;t&quot;:128056}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:15,&quot;t&quot;:128058}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:16,&quot;t&quot;:128058}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:16,&quot;t&quot;:128061}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:17,&quot;t&quot;:128064}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:17,&quot;t&quot;:128067}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:18,&quot;t&quot;:128068}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:18,&quot;t&quot;:128072}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:19,&quot;t&quot;:128077}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:19,&quot;t&quot;:128081}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:20,&quot;t&quot;:128081}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:20,&quot;t&quot;:128083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:21,&quot;t&quot;:128083}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:21,&quot;t&quot;:128086}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:22,&quot;t&quot;:128087}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:22,&quot;t&quot;:128091}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:23,&quot;t&quot;:128092}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:23,&quot;t&quot;:128094}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:24,&quot;t&quot;:128094}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:24,&quot;t&quot;:128095}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:25,&quot;t&quot;:128096}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:25,&quot;t&quot;:128097}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:26,&quot;t&quot;:128098}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:26,&quot;t&quot;:128100}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:27,&quot;t&quot;:128101}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:27,&quot;t&quot;:128102}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:28,&quot;t&quot;:128103}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:28,&quot;t&quot;:128104}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:29,&quot;t&quot;:128104}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-invoke&quot;,&quot;value&quot;:29,&quot;t&quot;:128105}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;XSS_CVE_ajaxPrefilter&quot;,&quot;value&quot;:30,&quot;t&quot;:128106}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:1,&quot;t&quot;:130947}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:2,&quot;t&quot;:132079}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:3,&quot;t&quot;:132085}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:4,&quot;t&quot;:132095}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:5,&quot;t&quot;:132109}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:6,&quot;t&quot;:132116}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:7,&quot;t&quot;:132126}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:1,&quot;t&quot;:133208}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:2,&quot;t&quot;:133208}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Event:csm.CrossOriginDomains.2&quot;,&quot;value&quot;:1,&quot;t&quot;:134236}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:8,&quot;t&quot;:134615}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:9,&quot;t&quot;:134619}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:10,&quot;t&quot;:134621}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:11,&quot;t&quot;:134624}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:12,&quot;t&quot;:134626}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:13,&quot;t&quot;:134643}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_fulfilled&quot;,&quot;value&quot;:1,&quot;t&quot;:135526}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_fulfilled&quot;,&quot;value&quot;:2,&quot;t&quot;:135543}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:14,&quot;t&quot;:137523}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:15,&quot;t&quot;:137527}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:16,&quot;t&quot;:137529}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:17,&quot;t&quot;:137530}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:18,&quot;t&quot;:138702}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:19,&quot;t&quot;:138705}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:20,&quot;t&quot;:140568}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:21,&quot;t&quot;:140569}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:22,&quot;t&quot;:141594}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:23,&quot;t&quot;:141595}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:24,&quot;t&quot;:141597}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:25,&quot;t&quot;:142779}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:26,&quot;t&quot;:143614}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:27,&quot;t&quot;:143616}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:28,&quot;t&quot;:145800}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;gw-img-size-error&quot;,&quot;value&quot;:29,&quot;t&quot;:149777}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:155670}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:185920}},{&quot;cel&quot;:{&quot;n&quot;:&quot;Navigation-desktop-navbar&quot;,&quot;w&quot;:1262.6666259765625,&quot;h&quot;:99,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;nav-sprite-v1 celwidget nav-bluebeacon nav-a11y-t1 bold-focus-hover layout2 nav-flex layout3 layout3-alt nav-packard-glow hamburger nav-progressive-attribute&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-hero-order&quot;,&quot;w&quot;:1262.6666259765625,&quot;h&quot;:230,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:99,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-desktop-hero-left-cel&quot;,&quot;w&quot;:80,&quot;h&quot;:250,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:99,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-carousel-col a-carousel-left celwidget&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:216235}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:246467}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:276720}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:306930}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-6&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:1,&quot;x&quot;:-3789,&quot;y&quot;:99,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-lazy-loaded gw-ftGr-desktop-hero csm-placement-id-b4c8e659-2340-4c35-ba1a-759039cb7d73 desktop-gateway-atf_3f2c0776-6b6c-4e06-bacd-9a0d1ba7f251 celwidget pd_rd_wg-0HCyI pd_rd_w-oJ0nK pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-7&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:1,&quot;x&quot;:-2526,&quot;y&quot;:99,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-lazy-loaded gw-ftGr-desktop-hero csm-placement-id-a2b45e7e-23aa-4fd5-8c04-917c63f27272 desktop-gateway-atf_7eee9f56-6bc5-49c7-8397-ba2e2215ae1b celwidget pd_rd_wg-0HCyI pd_rd_w-UycL6 pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-8&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:1,&quot;x&quot;:-1263,&quot;y&quot;:99,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-lazy-loaded gw-ftGr-desktop-hero csm-placement-id-e956a677-519f-4428-9ba4-a41f3b89e211 desktop-gateway-atf_034e462e-8df1-4893-b5ad-ae27e92fab93 celwidget pd_rd_wg-0HCyI pd_rd_w-ZamCI pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-1&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:99,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-ftGr-desktop-hero gw-critical-content csm-placement-id-115f0c3a-3f64-43d4-aee0-c16375ba87e0 desktop-gateway-atf_c8f7d81d-2771-48c6-b0b5-c2f9891714a2 celwidget pd_rd_wg-0HCyI pd_rd_w-NfyTq pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-2&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:1,&quot;x&quot;:1263,&quot;y&quot;:99,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-lazy-loaded gw-ftGr-desktop-hero csm-placement-id-abdac1ad-55e2-47b3-bfa9-50136b1a0ddd desktop-gateway-atf_cc2cd9d1-f554-4e2f-869a-88d0732469a1 celwidget pd_rd_wg-0HCyI pd_rd_w-IYID0 pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-3&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:1,&quot;x&quot;:2526,&quot;y&quot;:99,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-lazy-loaded gw-ftGr-desktop-hero csm-placement-id-3cdbde49-3ae4-4ee7-9e46-15f0b6d3dc1b desktop-gateway-atf_c1563dad-ee97-4027-909a-4f9d71c844e8 celwidget pd_rd_wg-0HCyI pd_rd_w-lJeCK pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-4&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:1,&quot;x&quot;:3789,&quot;y&quot;:99,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-lazy-loaded gw-ftGr-desktop-hero csm-placement-id-1c87762e-450e-4194-abf3-efab7df69744 desktop-gateway-atf_6a0fb273-a7f5-4a2d-a01b-1a713cd839d4 celwidget pd_rd_wg-0HCyI pd_rd_w-29Ujc pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-5&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:1,&quot;x&quot;:5052,&quot;y&quot;:99,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-lazy-loaded gw-ftGr-desktop-hero csm-placement-id-684c71b7-1bbe-4415-b534-80833de3b2f3 desktop-gateway-atf_50c7cd79-7646-4b4b-a196-61b3335ef213 celwidget pd_rd_wg-0HCyI pd_rd_w-sQwig pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-desktop-hero-right-cel&quot;,&quot;w&quot;:80,&quot;h&quot;:250,&quot;d&quot;:0,&quot;x&quot;:1182.6666259765625,&quot;y&quot;:99,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;a-carousel-col a-carousel-right celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-1&quot;,&quot;w&quot;:307.54998779296875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:349,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-31af2909-5724-40dd-a850-0cfbd6f0a6b4 desktop-gateway-atf_4408d951-4d4d-4cab-92b4-de44a9567f3b celwidget pd_rd_wg-0HCyI pd_rd_w-DYNxd pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-2&quot;,&quot;w&quot;:307.566650390625,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:317.54998779296875,&quot;y&quot;:349,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-144e8260-2f17-43c8-802d-62cec6e12d1b desktop-gateway-atf_d2a84ace-a0e7-483f-9d0f-13d91f867d6c celwidget pd_rd_wg-0HCyI pd_rd_w-LlF38 pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-3&quot;,&quot;w&quot;:307.54998779296875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:625.11669921875,&quot;y&quot;:349,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-b01a89d2-566e-4e90-9b2d-93c13704cb78 desktop-gateway-atf_dffb4418-9a5b-49f8-be39-5e6b7f28efc4 celwidget pd_rd_wg-0HCyI pd_rd_w-xdTqV pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-1-D1&quot;,&quot;w&quot;:300,&quot;h&quot;:150,&quot;d&quot;:0,&quot;x&quot;:942.6666870117188,&quot;y&quot;:349,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-row csm-placement-id-b1dbcf0f-387c-42b7-a092-9d42f9c202b5 desktop-gateway-atf_539fbf69-d5ff-4252-ae81-8db7d87b0562 celwidget pd_rd_wg-0HCyI pd_rd_w-65cTQ pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-1-D2&quot;,&quot;w&quot;:300,&quot;h&quot;:250,&quot;d&quot;:0,&quot;x&quot;:942.6666870117188,&quot;y&quot;:519,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-row csm-placement-id-f124d74f-3b5d-4709-9751-ce89fb30c785 desktop-gateway-atf_640ba273-94d1-448d-81e7-72f8eb2e3222 celwidget pd_rd_wg-0HCyI pd_rd_w-cuNis pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Gateway:right-2:desktop&quot;,&quot;w&quot;:300,&quot;h&quot;:270,&quot;d&quot;:0,&quot;x&quot;:942.6666870117188,&quot;y&quot;:519,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-4&quot;,&quot;w&quot;:307.54998779296875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:789,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-0f070632-1d18-4fe5-a347-2e1f2817db2b desktop-gateway-atf_692f413a-fd66-4734-b161-b7c9592551fc celwidget pd_rd_wg-0HCyI pd_rd_w-GsIOb pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-5&quot;,&quot;w&quot;:307.566650390625,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:317.54998779296875,&quot;y&quot;:789,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-847e03dc-32e6-4b73-b164-807ff4502869 desktop-gateway-atf_8489e55b-9076-437e-83f6-d85c78fd88b2 celwidget pd_rd_wg-0HCyI pd_rd_w-PvDwa pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-6&quot;,&quot;w&quot;:307.54998779296875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:625.11669921875,&quot;y&quot;:789,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-17385013-a5d3-43bc-be24-c4ad313d0107 desktop-gateway-atf_3be57cc8-8d3e-48ce-afae-673216afb66f celwidget pd_rd_wg-0HCyI pd_rd_w-h7Tti pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-7&quot;,&quot;w&quot;:320,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:932.6666870117188,&quot;y&quot;:789,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col gw-fixed-col csm-placement-id-f51fd786-0fed-4561-bf94-cf4bc85ad84d desktop-gateway-atf_796c0306-cc43-4d79-bf39-52e4ac5dbe02 celwidget pd_rd_wg-0HCyI pd_rd_w-qTJDV pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;&quot;,&quot;w&quot;:0,&quot;h&quot;:0,&quot;d&quot;:1,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col celwidget&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-top&quot;,&quot;w&quot;:1242.6666259765625,&quot;h&quot;:361.6333312988281,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:1229,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col desktop-row gwi-row gw-widget-instrument gw-auto-height csm-placement-id-7f4a3afe-60dd-4be9-828c-5703b1b1238a desktop-gateway-atf_deals-p13n-e58610fc-4200-415e-96c7-d74fc17f0391 celwidget pd_rd_wg-0HCyI pd_rd_w-RuQQu pd_rd_r-0a5e9956-04ae-46bc-b8fc-6a00c6ed01ce&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-1&quot;,&quot;w&quot;:1242.6666259765625,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:1610.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col desktop-row gwi-row gw-widget-instrument gw-auto-height csm-placement-id-cb479c41-af0d-4720-8a08-5a59c69c874a desktop-gateway-btf_25a6d817-5373-4100-9114-8c30405fd172 celwidget pd_rd_wg-hDP3a pd_rd_w-mcurs pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-2&quot;,&quot;w&quot;:1242.6666259765625,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:1915.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col desktop-row gwi-row gw-widget-instrument gw-auto-height csm-placement-id-a9aef639-32c3-4ed2-8209-039c45fbe60e desktop-gateway-btf_736b7a13-37f5-4620-903b-1b6cec997fd5 celwidget pd_rd_wg-hDP3a pd_rd_w-jK5LD pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-1&quot;,&quot;w&quot;:310.66668701171875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:2220.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-bdbf7a34-8a77-427d-8763-a7533a797782 desktop-gateway-btf_c0d1a7cd-7e6a-4377-bbee-4a9bc2170e4a celwidget pd_rd_wg-hDP3a pd_rd_w-L49kV pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-2&quot;,&quot;w&quot;:310.6666564941406,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:320.66668701171875,&quot;y&quot;:2220.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-897fd410-33e9-4bd0-ad0f-a0b2dc0bafca desktop-gateway-btf_91d205c0-4884-4061-8c9e-2ce297678ace celwidget pd_rd_wg-hDP3a pd_rd_w-F3eNp pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-3&quot;,&quot;w&quot;:310.66668701171875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:631.3333129882812,&quot;y&quot;:2220.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-acac2139-defa-48c3-a73d-58f6b68317f7 desktop-gateway-btf_f62f45bf-b5b3-4611-a71c-bd4d99fc9eaf celwidget pd_rd_wg-hDP3a pd_rd_w-cse9y pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-4&quot;,&quot;w&quot;:310.66668701171875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:942,&quot;y&quot;:2220.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-7f486d1c-7a35-4505-a0e6-1d1f24cbd5e9 desktop-gateway-btf_b921ea91-0039-4eb6-aabb-5d9d4372e54f celwidget pd_rd_wg-hDP3a pd_rd_w-k7eU0 pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-3&quot;,&quot;w&quot;:1242.6666259765625,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:2660.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col desktop-row gwi-row gw-widget-instrument gw-auto-height csm-placement-id-840d9bc0-c12a-4443-ba2a-3c46abf6671e desktop-gateway-btf_113ad82c-aa07-412c-8837-345a6a726034 celwidget pd_rd_wg-hDP3a pd_rd_w-ZRtBd pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-4&quot;,&quot;w&quot;:1242.6666259765625,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:2965.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col desktop-row gwi-row gw-widget-instrument gw-auto-height csm-placement-id-ad2751ef-ec31-41b9-9358-4b223fee36fb desktop-gateway-btf_6a626eae-206a-4436-af6b-5a557695f5d9 celwidget pd_rd_wg-hDP3a pd_rd_w-kIDXX pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-ad-center-1&quot;,&quot;w&quot;:1242.6666259765625,&quot;h&quot;:250,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:3270.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col ad-center gw-auto-height csm-placement-id-8a4565bb-c89f-407d-9c6f-d1d827c24e4b desktop-gateway-btf_53621034-a19c-4d0f-a9a5-721885e60f9f celwidget pd_rd_wg-hDP3a pd_rd_w-CaVbs pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:337156}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:367429}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:397629}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:427837}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:458256}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:488603}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:518826}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:549041}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:579311}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Gateway:desktop-ad-center-1:desktop&quot;,&quot;w&quot;:970,&quot;h&quot;:267,&quot;d&quot;:0,&quot;x&quot;:146.3333282470703,&quot;y&quot;:3270.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;copilot-secure-display celwidget  text/x-dacx-safeframe&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-5&quot;,&quot;w&quot;:310.66668701171875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:3540.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-bf30990f-3ddb-47a8-b9e2-5edceded8581 desktop-gateway-btf_92d6d933-0794-4e0a-b192-8c0011cbd21d celwidget pd_rd_wg-hDP3a pd_rd_w-6VDbo pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-6&quot;,&quot;w&quot;:310.6666564941406,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:320.66668701171875,&quot;y&quot;:3540.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-8b3e254d-61bb-49a9-8ac9-e7e8ee187d0f desktop-gateway-btf_3ae780b8-b6ee-4f88-99d8-aaa7d10334ad celwidget pd_rd_wg-hDP3a pd_rd_w-ZURsE pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-7&quot;,&quot;w&quot;:310.66668701171875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:631.3333129882812,&quot;y&quot;:3540.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-69058c52-e2be-41db-bc75-e0147d8533b9 desktop-gateway-btf_f97556fe-0965-445a-9025-fc69e9042199 celwidget pd_rd_wg-hDP3a pd_rd_w-zdalR pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-8&quot;,&quot;w&quot;:310.66668701171875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:942,&quot;y&quot;:3540.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-c0ed931f-1252-4126-a445-caa70094c26f desktop-gateway-btf_28d4088c-d31c-4608-b40d-3ed7d4b568b1 celwidget pd_rd_wg-hDP3a pd_rd_w-SQTrd pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-5&quot;,&quot;w&quot;:1242.6666259765625,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:3980.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col desktop-row gwi-row gw-widget-instrument gw-auto-height csm-placement-id-720b5979-f50b-4492-bd1b-bccb0403950f desktop-gateway-btf_edeadd55-8eed-43aa-aba8-8fd4785b0c6d celwidget pd_rd_wg-hDP3a pd_rd_w-dlgfw pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-6&quot;,&quot;w&quot;:1242.6666259765625,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:4285.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col desktop-row gwi-row gw-widget-instrument gw-auto-height csm-placement-id-46d73290-5e56-44ee-9455-60a9f7b9cbef desktop-gateway-btf_7cfdac8e-7a62-4077-abfc-c6b132e0cd90 celwidget pd_rd_wg-hDP3a pd_rd_w-U1bEz pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-9&quot;,&quot;w&quot;:310.66668701171875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:4590.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-2ce4ec40-e87d-43c5-a49b-69b0d6e480ec desktop-gateway-btf_787585dc-7833-47de-bf59-b0a46d32abe8 celwidget pd_rd_wg-hDP3a pd_rd_w-DXOSI pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-10&quot;,&quot;w&quot;:310.6666564941406,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:320.66668701171875,&quot;y&quot;:4590.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-bc896621-8cc6-4250-933a-7176d1bbf591 desktop-gateway-btf_1d04cf03-4d88-4728-a4f5-fa08defc6772 celwidget pd_rd_wg-hDP3a pd_rd_w-a0xSw pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-11&quot;,&quot;w&quot;:310.66668701171875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:631.3333129882812,&quot;y&quot;:4590.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-d0842670-fb6b-4c51-b19f-9659a79bad3b desktop-gateway-btf_0919076a-0889-4a59-9893-bf746428a5d2 celwidget pd_rd_wg-hDP3a pd_rd_w-m7TYP pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-12&quot;,&quot;w&quot;:310.66668701171875,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:942,&quot;y&quot;:4590.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col csm-placement-id-211d3c08-ef8f-4431-bf63-ee4eb0728d76 desktop-gateway-btf_4ab9c28e-965a-4bbd-95ca-794e01e1ded3 celwidget pd_rd_wg-hDP3a pd_rd_w-lB11s pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-7&quot;,&quot;w&quot;:1242.6666259765625,&quot;h&quot;:281.5,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:5030.63330078125,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;gw-col desktop-row gwi-row gw-widget-instrument gw-auto-height csm-placement-id-211684f4-ebe1-443f-8a4a-0773471e979f desktop-gateway-btf_crs_zg_ts-1571271031 celwidget pd_rd_wg-hDP3a pd_rd_w-0yaNX pd_rd_r-25af0a64-6e58-4e4b-bf6e-481556db107b&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;nav_sitewide_msg&quot;,&quot;w&quot;:400,&quot;h&quot;:39,&quot;d&quot;:0,&quot;x&quot;:862.6666870117188,&quot;y&quot;:60,&quot;t&quot;:135164,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:609596}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.PDM.TotalExecutions&quot;,&quot;value&quot;:25,&quot;t&quot;:628744}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.VPI.TotalExecutions&quot;,&quot;value&quot;:1,&quot;t&quot;:628750}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.VPI.TotalExecutionTime&quot;,&quot;value&quot;:0,&quot;t&quot;:628751}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.VPI.AverageExecutionTime&quot;,&quot;value&quot;:0,&quot;t&quot;:628751}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.widgets.batchesProcessed&quot;,&quot;value&quot;:4,&quot;t&quot;:628754}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:595,&quot;y&quot;:593,&quot;t&quot;:628755}],&quot;min&quot;:0,&quot;max&quot;:0,&quot;avg&quot;:0}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:628755}},{&quot;cel&quot;:{&quot;k&quot;:&quot;eod&quot;,&quot;t0&quot;:1670788888529,&quot;t&quot;:628756}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:254,&quot;t&quot;:725527}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;QF-N:SN:QN:TN&quot;,&quot;value&quot;:1,&quot;t&quot;:725528}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;armored-cxguardrails.unresponsive-clicks.violations&quot;,&quot;value&quot;:0,&quot;t&quot;:725539}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;armored-cxguardrails.unresponsive-clicks.violationRate&quot;,&quot;value&quot;:0,&quot;t&quot;:725539}},{&quot;csm&quot;:{&quot;k&quot;:&quot;chk&quot;,&quot;f&quot;:2,&quot;l&quot;:{&quot;csmcount&quot;:340,&quot;cel&quot;:95,&quot;navigation&quot;:1,&quot;csm&quot;:2},&quot;s&quot;:&quot;inln&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OE/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/S/sash/WOnTLzkiaEccV7F.woff2-175" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/S/sash/WOnTLzkiaEccV7F.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://m.media-amazon.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/rd/uedata-179" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ld" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ld</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">0.233870.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">09G78ZEE47P7Y6DFC7DT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sw</stringProp>
                  <stringProp name="Argument.value">1280</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sh</stringProp>
                  <stringProp name="Argument.value">720</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vw</stringProp>
                  <stringProp name="Argument.value">1263</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vh</stringProp>
                  <stringProp name="Argument.value">595</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sc</stringProp>
                  <stringProp name="Argument.value">09G78ZEE47P7Y6DFC7DT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ue</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bb</stringProp>
                  <stringProp name="Argument.value">234</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ns" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ns</stringProp>
                  <stringProp name="Argument.value">285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="be" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">be</stringProp>
                  <stringProp name="Argument.value">884</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fcp</stringProp>
                  <stringProp name="Argument.value">677</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ne" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ne</stringProp>
                  <stringProp name="Argument.value">1132</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cf</stringProp>
                  <stringProp name="Argument.value">1132</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">1234</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">-743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="na_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">na_</stringProp>
                  <stringProp name="Argument.value">-743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul_</stringProp>
                  <stringProp name="Argument.value">-59</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ul</stringProp>
                  <stringProp name="Argument.value">-53</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rd_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rd_</stringProp>
                  <stringProp name="Argument.value">-1670789614796</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_rd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_rd</stringProp>
                  <stringProp name="Argument.value">-1670789614796</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fe_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fe_</stringProp>
                  <stringProp name="Argument.value">-723</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lk_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lk_</stringProp>
                  <stringProp name="Argument.value">-704</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_lk" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_lk</stringProp>
                  <stringProp name="Argument.value">-700</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="co_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">co_</stringProp>
                  <stringProp name="Argument.value">-699</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_co" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_co</stringProp>
                  <stringProp name="Argument.value">-694</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sc_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sc_</stringProp>
                  <stringProp name="Argument.value">-699</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rq_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rq_</stringProp>
                  <stringProp name="Argument.value">-694</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rs_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rs_</stringProp>
                  <stringProp name="Argument.value">-689</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_rs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_rs</stringProp>
                  <stringProp name="Argument.value">-70</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dl_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dl_</stringProp>
                  <stringProp name="Argument.value">-63</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="di_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">di_</stringProp>
                  <stringProp name="Argument.value">955</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="de_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">de_</stringProp>
                  <stringProp name="Argument.value">1142</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_de" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_de</stringProp>
                  <stringProp name="Argument.value">1164</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_dc</stringProp>
                  <stringProp name="Argument.value">1231</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ld_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ld_</stringProp>
                  <stringProp name="Argument.value">1232</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ld" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ld</stringProp>
                  <stringProp name="Argument.value">-1670789614796</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ntd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ntd</stringProp>
                  <stringProp name="Argument.value">-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ty</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rc</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hob" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hob</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hoe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hoe</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ld" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ld</stringProp>
                  <stringProp name="Argument.value">1235</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1670789616031</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ctb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ctb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bfform" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bfform</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rt</stringProp>
                  <stringProp name="Argument.value">cf:18-5-0-12-2-4-0__ld:18-5-0-12-2-4-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="csmtags" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">csmtags</stringProp>
                  <stringProp name="Argument.value">aui%7Caui:aui_build_date:3.22.2-2022-12-07%7CmutObsYes%7CmutObsActive%7Cnavbar%7Cfls-eu-amazon-in%7Cadblk_no%7CperfYes%7CgwCFImgCache%7CABPStatusNotEnabled:Gateway:right-2:desktop%7CABPStatusNotEnabled:Gateway:desktop-ad-center-1:desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="viz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">viz</stringProp>
                  <stringProp name="Argument.value">visible:5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pty</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="spty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spty</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pti" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pti</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">AAMY482BDTBT2NBW4Y2K</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aftb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aftb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rd/uedata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/S/apesafeframe/ape/sf/desktop/sf-1.50.085a9a1.html-193" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/S/apesafeframe/ape/sf/desktop/sf-1.50.085a9a1.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/S/apesafeframe/ape/sf/desktop/sf-1.50.085a9a1.html-194" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/S/apesafeframe/ape/sf/desktop/sf-1.50.085a9a1.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DspLoadJs%26cf0%3D1303%26pc0%3D1303%26ld0%3D1303%26t0%3D1670789616099%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1303-180" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DspLoadJs%26cf0%3D1303%26pc0%3D1303%26ld0%3D1303%26t0%3D1670789616099%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1303</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26sw%3D1280%26sh%3D720%26vw%3D1263%26vh%3D595%26m%3D1%26sc%3D09G78ZEE47P7Y6DFC7DT%26ue%3D5%26bb%3D234%26ns%3D285%26be%3D884%26fcp%3D677%26ne%3D1132%26cf%3D1132%26pc%3D1234%26tc%3D-743%26na_%3D-743%26ul_%3D-59%26_ul%3D-53%26rd_%3D-1670789614796%26_rd%3D-1670789614796%26fe_%3D-723%26lk_%3D-704%26_lk%3D-700%26co_%3D-699%26_co%3D-694%26sc_%3D-699%26rq_%3D-694%26rs_%3D-689%26_rs%3D-70%26dl_%3D-63%26di_%3D955%26de_%3D1142%26_de%3D1164%26_dc%3D1231%26ld_%3D1232%26_ld%3D-1670789614796%26ntd%3D-2%26ty%3D1%26rc%3D0%26hob%3D2%26hoe%3D5%26ld%3D1235%26t%3D1670789616031%26ctb%3D1%26bfform%3D1%26rt%3Dcf%3A18-5-0-12-2-4-0__ld%3A18-5-0-12-2-4-0%26csmtags%3Daui%7Caui%3Aaui_build_date%3A3.22.2-2022-12-07%7CmutObsYes%7CmutObsActive%7Cnavbar%7Cfls-eu-amazon-in%7Cadblk_no%7CperfYes%7CgwCFImgCache%7CABPStatusNotEnabled%3AGateway%3Aright-2%3Adesktop%7CABPStatusNotEnabled%3AGateway%3Adesktop-ad-center-1%3Adesktop%26viz%3Dvisible%3A5%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1240-190" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26sw%3D1280%26sh%3D720%26vw%3D1263%26vh%3D595%26m%3D1%26sc%3D09G78ZEE47P7Y6DFC7DT%26ue%3D5%26bb%3D234%26ns%3D285%26be%3D884%26fcp%3D677%26ne%3D1132%26cf%3D1132%26pc%3D1234%26tc%3D-743%26na_%3D-743%26ul_%3D-59%26_ul%3D-53%26rd_%3D-1670789614796%26_rd%3D-1670789614796%26fe_%3D-723%26lk_%3D-704%26_lk%3D-700%26co_%3D-699%26_co%3D-694%26sc_%3D-699%26rq_%3D-694%26rs_%3D-689%26_rs%3D-70%26dl_%3D-63%26di_%3D955%26de_%3D1142%26_de%3D1164%26_dc%3D1231%26ld_%3D1232%26_ld%3D-1670789614796%26ntd%3D-2%26ty%3D1%26rc%3D0%26hob%3D2%26hoe%3D5%26ld%3D1235%26t%3D1670789616031%26ctb%3D1%26bfform%3D1%26rt%3Dcf%3A18-5-0-12-2-4-0__ld%3A18-5-0-12-2-4-0%26csmtags%3Daui%7Caui%3Aaui_build_date%3A3.22.2-2022-12-07%7CmutObsYes%7CmutObsActive%7Cnavbar%7Cfls-eu-amazon-in%7Cadblk_no%7CperfYes%7CgwCFImgCache%7CABPStatusNotEnabled%3AGateway%3Aright-2%3Adesktop%7CABPStatusNotEnabled%3AGateway%3Adesktop-ad-center-1%3Adesktop%26viz%3Dvisible%3A5%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1240</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Dgateway-asset-load%26cf0%3D1296%26pc0%3D1296%26ld0%3D1296%26t0%3D1670789616092%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1296-182" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Dgateway-asset-load%26cf0%3D1296%26pc0%3D1296%26ld0%3D1296%26t0%3D1670789616092%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1296</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DjQueryReady%26cf0%3D1292%26pc0%3D1292%26ld0%3D1292%26t0%3D1670789616088%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1292-184" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DjQueryReady%26cf0%3D1292%26pc0%3D1292%26ld0%3D1292%26t0%3D1670789616088%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1292</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DjQueryDomReady%26cf0%3D1294%26pc0%3D1294%26ld0%3D1294%26t0%3D1670789616090%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1294-185" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DjQueryDomReady%26cf0%3D1294%26pc0%3D1294%26ld0%3D1294%26t0%3D1670789616090%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1294</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26sc0%3Dportal-bb%26pc0%3D2%26ld0%3D2%26t0%3D1670789615032%26sc1%3Dgw-ftGr-desktop-hero-1-visible%26cf1%3D299%26pc1%3D300%26ld1%3D300%26t1%3D1670789615096%26sc2%3Dh1Af%26cf2%3D301%26pc2%3D301%26ld2%3D301%26t2%3D1670789615097%26sc3%3Ddesktop-grid-1-visible%26cf3%3D303%26pc3%3D303%26ld3%3D303%26t3%3D1670789615099%26sc4%3Ddesktop-grid-2-visible%26cf4%3D304%26pc4%3D304%26ld4%3D304%26t4%3D1670789615100%26sc5%3Ddesktop-grid-3-visible%26cf5%3D306%26pc5%3D306%26ld5%3D306%26t5%3D1670789615102%26sc6%3Ddesktop-grid-1-D1-visible%26cf6%3D307%26pc6%3D307%26ld6%3D307%26t6%3D1670789615103%26sc7%3Ddesktop-grid-4-visible%26cf7%3D506%26pc7%3D506%26ld7%3D506%26t7%3D1670789615302%26sc8%3Ddesktop-grid-5-visible%26cf8%3D507%26pc8%3D507%26ld8%3D507%26t8%3D1670789615303%26sc9%3Ddesktop-grid-6-visible%26cf9%3D517%26pc9%3D517%26ld9%3D517%26t9%3D1670789615313%26sc10%3Ddesktop-top-visible%26cf10%3D530%26pc10%3D530%26ld10%3D530%26t10%3D1670789615326%26sc11%3Ddesktop-1-visible%26cf11%3D532%26pc11%3D532%26ld11%3D532%26t11%3D1670789615328%26sc12%3Ddesktop-2-visible%26cf12%3D534%26pc12%3D534%26ld12%3D534%26t12%3D1670789615330%26sc13%3Ddesktop-btf-grid-1-visible%26cf13%3D535%26pc13%3D535%26ld13%3D535%26t13%3D1670789615331%26sc14%3Ddesktop-btf-grid-2-visible%26cf14%3D536%26pc14%3D536%26ld14%3D536%26t14%3D1670789615332%26sc15%3Ddesktop-btf-grid-3-visible%26cf15%3D537%26pc15%3D537%26ld15%3D537%26t15%3D1670789615333%26sc16%3Ddesktop-btf-grid-4-visible%26cf16%3D586%26pc16%3D586%26ld16%3D586%26t16%3D1670789615382%26sc17%3Ddesktop-4-visible%26cf17%3D784%26pc17%3D784%26ld17%3D784%26t17%3D1670789615580%26sc18%3Ddesktop-btf-grid-5-visible%26cf18%3D807%26pc18%3D807%26ld18%3D807%26t18%3D1670789615603%26sc19%3Ddesktop-btf-grid-6-visible%26cf19%3D808%26pc19%3D808%26ld19%3D808%26t19%3D1670789615604%26sc20%3Ddesktop-btf-grid-7-visible%26cf20%3D810%26pc20%3D810%26ld20%3D810%26t20%3D1670789615606%26sc21%3Ddesktop-btf-grid-8-visible%26cf21%3D810%26pc21%3D810%26ld21%3D810%26t21%3D1670789615606%26sc22%3Ddesktop-btf-grid-9-visible%26cf22%3D816%26pc22%3D816%26ld22%3D816%26t22%3D1670789615612%26sc23%3Ddesktop-btf-grid-10-visible%26cf23%3D817%26pc23%3D817%26ld23%3D817%26t23%3D1670789615613%26sc24%3Ddesktop-btf-grid-11-visible%26cf24%3D818%26pc24%3D818%26ld24%3D818%26t24%3D1670789615614%26sc25%3Ddesktop-btf-grid-12-visible%26cf25%3D818%26pc25%3D818%26ld25%3D818%26t25%3D1670789615614%26sc26%3Ddesktop-7-visible%26cf26%3D851%26pc26%3D851%26ld26%3D851%26t26%3D1670789615647%26sc27%3DcsmCELLSframework%26bb27%3D887%26pc27%3D887%26ld27%3D887%26t27%3D1670789615683%26sc28%3DcsmCELLSpdm%26bb28%3D887%26pc28%3D938%26ld28%3D938%26t28%3D1670789615734%26sc29%3DcsmCELLSvpm%26bb29%3D938%26pc29%3D939%26ld29%3D939%26t29%3D1670789615735%26sc30%3DcsmCELLSfem%26bb30%3D939%26pc30%3D939%26ld30%3D939%26t30%3D1670789615735%26sc31%3Due_sushi_v1%26bb31%3D940%26pc31%3D941%26ld31%3D941%26t31%3D1670789615737%26sc32%3Ddesktop-grid-7-visible%26cf32%3D1220%26pc32%3D1220%26ld32%3D1220%26t32%3D1670789616016%26sc33%3Ddesktop-5-visible%26cf33%3D1220%26pc33%3D1220%26ld33%3D1220%26t33%3D1670789616016%26sc34%3Ddesktop-3-visible%26cf34%3D1221%26pc34%3D1221%26ld34%3D1221%26t34%3D1670789616017%26sc35%3Ddesktop-6-visible%26cf35%3D1221%26pc35%3D1221%26ld35%3D1221%26t35%3D1670789616017%26ctb%3D1%26bfform%3D1:1241-181" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26sc0%3Dportal-bb%26pc0%3D2%26ld0%3D2%26t0%3D1670789615032%26sc1%3Dgw-ftGr-desktop-hero-1-visible%26cf1%3D299%26pc1%3D300%26ld1%3D300%26t1%3D1670789615096%26sc2%3Dh1Af%26cf2%3D301%26pc2%3D301%26ld2%3D301%26t2%3D1670789615097%26sc3%3Ddesktop-grid-1-visible%26cf3%3D303%26pc3%3D303%26ld3%3D303%26t3%3D1670789615099%26sc4%3Ddesktop-grid-2-visible%26cf4%3D304%26pc4%3D304%26ld4%3D304%26t4%3D1670789615100%26sc5%3Ddesktop-grid-3-visible%26cf5%3D306%26pc5%3D306%26ld5%3D306%26t5%3D1670789615102%26sc6%3Ddesktop-grid-1-D1-visible%26cf6%3D307%26pc6%3D307%26ld6%3D307%26t6%3D1670789615103%26sc7%3Ddesktop-grid-4-visible%26cf7%3D506%26pc7%3D506%26ld7%3D506%26t7%3D1670789615302%26sc8%3Ddesktop-grid-5-visible%26cf8%3D507%26pc8%3D507%26ld8%3D507%26t8%3D1670789615303%26sc9%3Ddesktop-grid-6-visible%26cf9%3D517%26pc9%3D517%26ld9%3D517%26t9%3D1670789615313%26sc10%3Ddesktop-top-visible%26cf10%3D530%26pc10%3D530%26ld10%3D530%26t10%3D1670789615326%26sc11%3Ddesktop-1-visible%26cf11%3D532%26pc11%3D532%26ld11%3D532%26t11%3D1670789615328%26sc12%3Ddesktop-2-visible%26cf12%3D534%26pc12%3D534%26ld12%3D534%26t12%3D1670789615330%26sc13%3Ddesktop-btf-grid-1-visible%26cf13%3D535%26pc13%3D535%26ld13%3D535%26t13%3D1670789615331%26sc14%3Ddesktop-btf-grid-2-visible%26cf14%3D536%26pc14%3D536%26ld14%3D536%26t14%3D1670789615332%26sc15%3Ddesktop-btf-grid-3-visible%26cf15%3D537%26pc15%3D537%26ld15%3D537%26t15%3D1670789615333%26sc16%3Ddesktop-btf-grid-4-visible%26cf16%3D586%26pc16%3D586%26ld16%3D586%26t16%3D1670789615382%26sc17%3Ddesktop-4-visible%26cf17%3D784%26pc17%3D784%26ld17%3D784%26t17%3D1670789615580%26sc18%3Ddesktop-btf-grid-5-visible%26cf18%3D807%26pc18%3D807%26ld18%3D807%26t18%3D1670789615603%26sc19%3Ddesktop-btf-grid-6-visible%26cf19%3D808%26pc19%3D808%26ld19%3D808%26t19%3D1670789615604%26sc20%3Ddesktop-btf-grid-7-visible%26cf20%3D810%26pc20%3D810%26ld20%3D810%26t20%3D1670789615606%26sc21%3Ddesktop-btf-grid-8-visible%26cf21%3D810%26pc21%3D810%26ld21%3D810%26t21%3D1670789615606%26sc22%3Ddesktop-btf-grid-9-visible%26cf22%3D816%26pc22%3D816%26ld22%3D816%26t22%3D1670789615612%26sc23%3Ddesktop-btf-grid-10-visible%26cf23%3D817%26pc23%3D817%26ld23%3D817%26t23%3D1670789615613%26sc24%3Ddesktop-btf-grid-11-visible%26cf24%3D818%26pc24%3D818%26ld24%3D818%26t24%3D1670789615614%26sc25%3Ddesktop-btf-grid-12-visible%26cf25%3D818%26pc25%3D818%26ld25%3D818%26t25%3D1670789615614%26sc26%3Ddesktop-7-visible%26cf26%3D851%26pc26%3D851%26ld26%3D851%26t26%3D1670789615647%26sc27%3DcsmCELLSframework%26bb27%3D887%26pc27%3D887%26ld27%3D887%26t27%3D1670789615683%26sc28%3DcsmCELLSpdm%26bb28%3D887%26pc28%3D938%26ld28%3D938%26t28%3D1670789615734%26sc29%3DcsmCELLSvpm%26bb29%3D938%26pc29%3D939%26ld29%3D939%26t29%3D1670789615735%26sc30%3DcsmCELLSfem%26bb30%3D939%26pc30%3D939%26ld30%3D939%26t30%3D1670789615735%26sc31%3Due_sushi_v1%26bb31%3D940%26pc31%3D941%26ld31%3D941%26t31%3D1670789615737%26sc32%3Ddesktop-grid-7-visible%26cf32%3D1220%26pc32%3D1220%26ld32%3D1220%26t32%3D1670789616016%26sc33%3Ddesktop-5-visible%26cf33%3D1220%26pc33%3D1220%26ld33%3D1220%26t33%3D1670789616016%26sc34%3Ddesktop-3-visible%26cf34%3D1221%26pc34%3D1221%26ld34%3D1221%26t34%3D1670789616017%26sc35%3Ddesktop-6-visible%26cf35%3D1221%26pc35%3D1221%26ld35%3D1221%26t35%3D1670789616017%26ctb%3D1%26bfform%3D1:1241</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DnavCF%26cf0%3D1407%26pc0%3D1407%26ld0%3D1407%26t0%3D1670789616203%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1407-197" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DnavCF%26cf0%3D1407%26pc0%3D1407%26ld0%3D1407%26t0%3D1670789616203%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1407</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/rd/uedata-216" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="at" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">at</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">0.233870.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">09G78ZEE47P7Y6DFC7DT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ctb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ctb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sc</stringProp>
                  <stringProp name="Argument.value">09G78ZEE47P7Y6DFC7DT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">3688</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="at" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">at</stringProp>
                  <stringProp name="Argument.value">3688</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1670789618484</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bfform" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bfform</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pty</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="spty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spty</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pti" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pti</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">AAMY482BDTBT2NBW4Y2K</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aftb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aftb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ui" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ui</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rd/uedata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/rd/uedata-218" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="at" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">at</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">0.233870.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">09G78ZEE47P7Y6DFC7DT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ctb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ctb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sc</stringProp>
                  <stringProp name="Argument.value">09G78ZEE47P7Y6DFC7DT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="af" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">af</stringProp>
                  <stringProp name="Argument.value">1220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fn</stringProp>
                  <stringProp name="Argument.value">1220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">3413</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="at" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">at</stringProp>
                  <stringProp name="Argument.value">3413</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1670789618209</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bfform" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bfform</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="csmtags" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">csmtags</stringProp>
                  <stringProp name="Argument.value">csm-feature-touch-enabled:false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pty</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="spty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spty</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pti" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pti</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">AAMY482BDTBT2NBW4Y2K</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aftb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aftb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rd/uedata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.nexusclient.prod-198" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;cs&quot;:{&quot;dct&quot;:{&quot;#0&quot;:&quot;requestId&quot;,&quot;#1&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;#2&quot;:&quot;server&quot;,&quot;#3&quot;:&quot;www.amazon.in&quot;,&quot;#4&quot;:&quot;obfuscatedMarketplaceId&quot;,&quot;#5&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;#6&quot;:&quot;producerId&quot;,&quot;#7&quot;:&quot;csm&quot;,&quot;#8&quot;:&quot;schemaId&quot;,&quot;#9&quot;:&quot;csm.CSMBaselineEvent.4&quot;,&quot;#10&quot;:&quot;timestamp&quot;,&quot;#11&quot;:&quot;messageId&quot;,&quot;#12&quot;:&quot;sessionId&quot;,&quot;#13&quot;:&quot;257-6224871-8744968&quot;}},&quot;events&quot;:[{&quot;data&quot;:{&quot;#0&quot;:&quot;#1&quot;,&quot;#2&quot;:&quot;#3&quot;,&quot;#4&quot;:&quot;#5&quot;,&quot;#6&quot;:&quot;#7&quot;,&quot;#8&quot;:&quot;#9&quot;,&quot;#10&quot;:&quot;2022-12-11T20:13:35.736Z&quot;,&quot;#11&quot;:&quot;09G78ZEE47P7Y6DFC7DT-1670789615736-8380362107&quot;,&quot;#12&quot;:&quot;#13&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi-eu.amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.nexusclient.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-grid-1-D1-active%26cf0%3D1841%26pc0%3D1841%26ld0%3D1841%26t0%3D1670789616637%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1842-213" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-grid-1-D1-active%26cf0%3D1841%26pc0%3D1841%26ld0%3D1841%26t0%3D1670789616637%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1842</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/e/xsp/getAdj-212" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="placementId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">placementId</stringProp>
                  <stringProp name="Argument.value">589e332a-17d0-4382-b320-05e6f4ddc521</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                  <stringProp name="Argument.value">511</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="slot" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">slot</stringProp>
                  <stringProp name="Argument.value">right-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">0101d70aae4294528370619ebe543d35f91b4c580425cae1acf9752fd562fa759bfa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rj" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rj</stringProp>
                  <stringProp name="Argument.value">%7B%7D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">aax_xsp_render_ad</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aax-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/e/xsp/getAdj</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://images-eu.ssl-images-amazon.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/e/xsp/getAdj-211" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="placementId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">placementId</stringProp>
                  <stringProp name="Argument.value">e44985f6-46f4-4231-90aa-f5c16f7c50aa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                  <stringProp name="Argument.value">511</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="slot" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">slot</stringProp>
                  <stringProp name="Argument.value">desktop-ad-center-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">0101d70aae4294528370619ebe543d35f91b4c580425cae1acf9752fd562fa759bfa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rj" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rj</stringProp>
                  <stringProp name="Argument.value">%7B%7D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">aax_xsp_render_ad</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aax-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/e/xsp/getAdj</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://images-eu.ssl-images-amazon.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/11FeRkgIdIL.css-233" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="xcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xcp</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/11FeRkgIdIL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DgwGridInit%26cf0%3D1418%26pc0%3D1419%26ld0%3D1420%26t0%3D1670789616216%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1421-220" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DgwGridInit%26cf0%3D1418%26pc0%3D1419%26ld0%3D1420%26t0%3D1670789616216%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1421</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DgwLayoutReady%26cf0%3D1983%26pc0%3D1983%26ld0%3D1983%26t0%3D1670789616779%26bfform%3D1%26csmtags%3Daui%3Asw%3Apage_proxy%3Ano_ctrl%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1983-230" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DgwLayoutReady%26cf0%3D1983%26pc0%3D1983%26ld0%3D1983%26t0%3D1670789616779%26bfform%3D1%26csmtags%3Daui%3Asw%3Apage_proxy%3Ano_ctrl%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1983</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Daui%3Asw%3Appft%3Acallback_ricb%26bb0%3D1292%26pc0%3D1869%26ld0%3D1869%26t0%3D1670789616665%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1869-215" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Daui%3Asw%3Appft%3Acallback_ricb%26bb0%3D1292%26pc0%3D1869%26ld0%3D1869%26t0%3D1670789616665%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1869</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DgwBTFGridInit%26cf0%3D1442%26pc0%3D1442%26ld0%3D1442%26t0%3D1670789616238%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1442-222" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DgwBTFGridInit%26cf0%3D1442%26pc0%3D1442%26ld0%3D1442%26t0%3D1670789616238%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1442</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Dhero-first-image%26cf0%3D1828%26pc0%3D1829%26ld0%3D1829%26t0%3D1670789616625%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1829-225" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Dhero-first-image%26cf0%3D1828%26pc0%3D1829%26ld0%3D1829%26t0%3D1670789616625%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:1829</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/rd/uedata-237" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="at" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">at</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">0.233870.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">09G78ZEE47P7Y6DFC7DT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sc</stringProp>
                  <stringProp name="Argument.value">csa:browserQuiteLd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">4549</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="at" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">at</stringProp>
                  <stringProp name="Argument.value">4549</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1670789619345</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bfform" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bfform</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="csmtags" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">csmtags</stringProp>
                  <stringProp name="Argument.value">browserQuiteLd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pty</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="spty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spty</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pti" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pti</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">AAMY482BDTBT2NBW4Y2K</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aftb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aftb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rd/uedata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-1-active%26cf0%3D2783%26pc0%3D2783%26ld0%3D2783%26t0%3D1670789617579%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:2783-238" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-1-active%26cf0%3D2783%26pc0%3D2783%26ld0%3D2783%26t0%3D1670789617579%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:2783</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-4-active%26cf0%3D3255%26pc0%3D3255%26ld0%3D3255%26t0%3D1670789618051%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3255-247" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-4-active%26cf0%3D3255%26pc0%3D3255%26ld0%3D3255%26t0%3D1670789618051%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3255</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fat%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26m%3D1%26sc%3Dcsa%3AbrowserQuiteLd%26pc%3D4549%26at%3D4549%26t%3D1670789619345%26bfform%3D1%26csmtags%3DbrowserQuiteLd%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:4550-245" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fat%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26m%3D1%26sc%3Dcsa%3AbrowserQuiteLd%26pc%3D4549%26at%3D4549%26t%3D1670789619345%26bfform%3D1%26csmtags%3DbrowserQuiteLd%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:4550</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-3-active%26cf0%3D3186%26pc0%3D3186%26ld0%3D3186%26t0%3D1670789617982%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3186-248" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-3-active%26cf0%3D3186%26pc0%3D3186%26ld0%3D3186%26t0%3D1670789617982%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3186</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DgwHerotatorActive%26cf0%3D4560%26pc0%3D4560%26ld0%3D4560%26t0%3D1670789619356%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:4560-252" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3DgwHerotatorActive%26cf0%3D4560%26pc0%3D4560%26ld0%3D4560%26t0%3D1670789619356%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:4560</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-2-active%26cf0%3D2946%26pc0%3D2946%26ld0%3D2946%26t0%3D1670789617742%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:2946-251" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-2-active%26cf0%3D2946%26pc0%3D2946%26ld0%3D2946%26t0%3D1670789617742%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:2946</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-5-active%26cf0%3D3268%26pc0%3D3268%26ld0%3D3268%26t0%3D1670789618064%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3268-261" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-5-active%26cf0%3D3268%26pc0%3D3268%26ld0%3D3268%26t0%3D1670789618064%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3268</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-7-active%26cf0%3D3341%26pc0%3D3341%26ld0%3D3341%26t0%3D1670789618137%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3341-274" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-7-active%26cf0%3D3341%26pc0%3D3341%26ld0%3D3341%26t0%3D1670789618137%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3341</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fat%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26m%3D1%26sc%3D09G78ZEE47P7Y6DFC7DT%26af%3D1220%26fn%3D1220%26pc%3D3413%26at%3D3413%26t%3D1670789618209%26bfform%3D1%26csmtags%3Dcsm-feature-touch-enabled%3Afalse%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3414-276" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fat%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26m%3D1%26sc%3D09G78ZEE47P7Y6DFC7DT%26af%3D1220%26fn%3D1220%26pc%3D3413%26at%3D3413%26t%3D1670789618209%26bfform%3D1%26csmtags%3Dcsm-feature-touch-enabled%3Afalse%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3414</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-6-active%26cf0%3D3276%26pc0%3D3276%26ld0%3D3276%26t0%3D1670789618072%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3276-270" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Ddesktop-6-active%26cf0%3D3276%26pc0%3D3276%26ld0%3D3276%26t0%3D1670789618072%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:3276</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fat%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26m%3D1%26sc%3D09G78ZEE47P7Y6DFC7DT%26pc%3D3688%26at%3D3688%26t%3D1670789618484%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1%26ui%3D2:3688-280" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fat%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26m%3D1%26sc%3D09G78ZEE47P7Y6DFC7DT%26pc%3D3688%26at%3D3688%26t%3D1670789618484%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1%26ui%3D2:3688</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Dgw-hero-btf-populate%26cf0%3D4227%26pc0%3D4227%26ld0%3D4227%26t0%3D1670789619023%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:4227-281" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:09G78ZEE47P7Y6DFC7DT$uedata=s:%2Frd%2Fuedata%3Fld%26v%3D0.233870.0%26id%3D09G78ZEE47P7Y6DFC7DT%26ctb%3D1%26sc0%3Dgw-hero-btf-populate%26cf0%3D4227%26pc0%3D4227%26ld0%3D4227%26t0%3D1670789619023%26bfform%3D1%26pty%3DGateway%26spty%3Ddesktop%26pti%3Ddesktop%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:4227</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.csa.prod-285" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;messageId&quot;:&quot;diji9c-iep88c-4yc6ta-ccb87q&quot;,&quot;markers&quot;:{&quot;pc&quot;:735123,&quot;tc&quot;:0,&quot;hob&quot;:9600,&quot;hoe&quot;:9603,&quot;ul&quot;:735123},&quot;markerTimestamps&quot;:{&quot;pc&quot;:1670789614055,&quot;tc&quot;:1670788878932,&quot;hob&quot;:1670788888532,&quot;hoe&quot;:1670788888535,&quot;ul&quot;:1670789614055},&quot;navigationStartTimestamp&quot;:&quot;2022-12-11T20:01:18.932Z&quot;,&quot;schemaId&quot;:&quot;csa.PageLatency.5&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:13:34.056Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;2b4b57-pqow45-rq0btk-xsjy1i&quot;,&quot;requestId&quot;:&quot;AAMY482BDTBT2NBW4Y2K&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;r4d5mj-35hdsa-vo8xjs-1mp6sg&quot;,&quot;schemaId&quot;:&quot;csa.InternalCounters.2&quot;,&quot;c&quot;:{&quot;postbackImageSize&quot;:{&quot;s&quot;:2754,&quot;l&quot;:254,&quot;c&quot;:10},&quot;QF-N:SN:QN:TN&quot;:{&quot;f&quot;:1},&quot;aui:resource_count&quot;:{&quot;s&quot;:45,&quot;l&quot;:4,&quot;c&quot;:9}},&quot;timestamp&quot;:&quot;2022-12-11T20:13:34.057Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;2b4b57-pqow45-rq0btk-xsjy1i&quot;,&quot;requestId&quot;:&quot;AAMY482BDTBT2NBW4Y2K&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;42ngmx-nn4kmh-iksrr8-id2sbq&quot;,&quot;schemaId&quot;:&quot;csa.ContentInteractionsSummary.1&quot;,&quot;w&quot;:{&quot;h51hik-5b7dhg-nwoifj-h01xgo&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;jc3121-9eth3i-pq5vrk-4frvwr&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;nc9x3y-6uh0-inz3gc-ro8edn&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390},&quot;dehkai-fvaein-5nvms0-lr96oi&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390},&quot;w9o213-htfm4l-arb3zd-3b7061&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390},&quot;1deerw-i9w2d5-4g69v4-ehvmc6&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390},&quot;3urzkv-5372ir-jq89e4-77gjao&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;v9pvjy-df06t-7vljj0-dww46n&quot;:{&quot;it0&quot;:1386},&quot;om33gq-4kiktt-mma3bt-xv8udu&quot;:{&quot;it0&quot;:1386},&quot;j6vdwr-jyqa3i-rp7jxz-l3cuq&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;hyg4zr-cq0v58-lpahgc-gmqt7m&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;u6r3rr-9a2jht-vlqh0m-h50zn3&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;um5ltq-sydqyq-qn94w0-n4k82a&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;kxi3hr-g6ewcz-cgtg77-embxx4&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;i46azc-do10ld-s1sgdi-nfdv9h&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;s56un7-bskd96-8p3z7u-rd2mgs&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;yqt948-ytxahg-kubrgt-2gvq9k&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;gknlfh-o9pwgh-wluhas-jhzkik&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;85ur17-ezhe06-uz4qma-skqdvu&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;x0wfbn-wf34n6-kdzx34-q4to26&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;256g5i-qjz0uz-2padxf-9zow3x&quot;:{&quot;it0&quot;:1386},&quot;pu76xo-ruwb2f-dzbb9u-frzaji&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392},&quot;2o6k03-jv1riv-jm8u1v-kcwr2u&quot;:{&quot;it0&quot;:1386,&quot;it50&quot;:1390,&quot;it100&quot;:1392}},&quot;timestamp&quot;:&quot;2022-12-11T20:13:34.058Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;2b4b57-pqow45-rq0btk-xsjy1i&quot;,&quot;requestId&quot;:&quot;AAMY482BDTBT2NBW4Y2K&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;activity&quot;:{&quot;scrollCounts&quot;:0,&quot;reachedDepth&quot;:595,&quot;horizontalScrollDistance&quot;:0,&quot;dwellTime&quot;:46900},&quot;dimensions&quot;:{&quot;availableScreenWidth&quot;:1280,&quot;availableScreenHeight&quot;:680,&quot;documentWidth&quot;:1263,&quot;documentHeight&quot;:6115,&quot;screenWidth&quot;:1280,&quot;screenHeight&quot;:720,&quot;viewportWidth&quot;:1280,&quot;viewportHeight&quot;:595},&quot;schemaId&quot;:&quot;csa.PageInteractionsSummary.1&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:13:34.065Z&quot;,&quot;messageId&quot;:&quot;doigmg-gvfcsk-d35p2l-g31bvl&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;2b4b57-pqow45-rq0btk-xsjy1i&quot;,&quot;requestId&quot;:&quot;AAMY482BDTBT2NBW4Y2K&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;4retpy-1z905k-vqfq1m-t1b12h&quot;,&quot;schemaId&quot;:&quot;csa.Metric.3&quot;,&quot;metrics&quot;:{&quot;totalBlockingTime&quot;:0,&quot;totalBlockingTimeInclLCP&quot;:0,&quot;maxBlockingTime&quot;:-1},&quot;dimensions&quot;:{},&quot;timestamp&quot;:&quot;2022-12-11T20:13:34.067Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;2b4b57-pqow45-rq0btk-xsjy1i&quot;,&quot;requestId&quot;:&quot;AAMY482BDTBT2NBW4Y2K&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.csa.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-286" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cb2cd4eb-a6fe-c72d-6223-0d216ce8074b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cb2cd4eb-a6fe-c72d-6223-0d216ce8074b</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">dr3fr5q4g2ul9.cloudfront.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-287" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cb2cd4eb-a6fe-c72d-6223-0d216ce8074b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cb2cd4eb-a6fe-c72d-6223-0d216ce8074b</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">d2ef20sk9hi1u3.cloudfront.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="categoryPage" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/x/px/RBLtzlJr1z0Wq3HLqXQVli0AAAGFAtJJxAMAAAH_AQBOL0EgICAgICAgICAgICBOL0EgICAgICAgICAgICDVvyJu/niv/%7B%22wh%22:595,%22ww%22:1280,%22sx%22:0,%22sy%22:0,%22ah%22:250,%22aw%22:300,%22top%22:519,%22left%22:942.6666870117188,%22v%22:%7B%22p%22:0,%22t%22:0,%22def%22:%22amzn%22%7D,%22ptv%22:200.384,%22ttv%22:199.946,%22niv%22:true%7D-288" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aax-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/x/px/RBLtzlJr1z0Wq3HLqXQVli0AAAGFAtJJxAMAAAH_AQBOL0EgICAgICAgICAgICBOL0EgICAgICAgICAgICDVvyJu/niv/%7B%22wh%22:595,%22ww%22:1280,%22sx%22:0,%22sy%22:0,%22ah%22:250,%22aw%22:300,%22top%22:519,%22left%22:942.6666870117188,%22v%22:%7B%22p%22:0,%22t%22:0,%22def%22:%22amzn%22%7D,%22ptv%22:200.384,%22ttv%22:199.946,%22niv%22:true%7D</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://images-eu.ssl-images-amazon.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/gp/navigation/ajax/generic.html-289" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ajaxTemplate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ajaxTemplate</stringProp>
                  <stringProp name="Argument.value">hMenuDesktopFirstLayer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hmDataAjaxHint" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hmDataAjaxHint</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshRegion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isFreshRegion</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshCustomer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isFreshCustomer</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isPrimeMember" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPrimeMember</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isPrimeDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPrimeDay</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSmile" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSmile</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isBackup" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isBackup</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="firstName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">firstName</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="navDeviceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">navDeviceType</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hashCustomerAndSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hashCustomerAndSessionId</stringProp>
                  <stringProp name="Argument.value">8ce346d1392481fc2963741fddcc69a0168acadf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="environmentVFI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">environmentVFI</stringProp>
                  <stringProp name="Argument.value">AmazonNavigationCards%2Fdevelopment%40B6106048915-AL2_x86_64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageCode</stringProp>
                  <stringProp name="Argument.value">en_IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isExportMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isExportMode</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/gp/navigation/ajax/generic.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/gp/navigation/ajax/generic.html-290" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ajaxTemplate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ajaxTemplate</stringProp>
                  <stringProp name="Argument.value">hamburgerMainContent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hmDataAjaxHint" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hmDataAjaxHint</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="navDeviceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">navDeviceType</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSmile" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSmile</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RegionalStores[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RegionalStores[]</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RegionalStores[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RegionalStores[]</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RegionalStores[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RegionalStores[]</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RegionalStores[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RegionalStores[]</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RegionalStores[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RegionalStores[]</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RegionalStores[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RegionalStores[]</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RegionalStores[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RegionalStores[]</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RegionalStores[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RegionalStores[]</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RegionalStores[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RegionalStores[]</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isPrime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPrime</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isBackup" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isBackup</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hashCustomerAndSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hashCustomerAndSessionId</stringProp>
                  <stringProp name="Argument.value">8ce346d1392481fc2963741fddcc69a0168acadf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isExportMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isExportMode</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageCode</stringProp>
                  <stringProp name="Argument.value">en_IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="environmentVFI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">environmentVFI</stringProp>
                  <stringProp name="Argument.value">AmazonNavigationCards/development@B6106048915-AL2_x86_64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="secondLayerTreeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">secondLayerTreeName</stringProp>
                  <stringProp name="Argument.value">amazon_echo_T1+shopall_fire_tv_t2+navkindlereadersindic+AudibleAudiobooks+amazon_prime_video+amazon_prime_music+Mobiles_Computers+TV_Appliances_Electronics+mens_fashion+womens_fashion+home_kitchen_pets+beauty_health_grocery+sports_fitness_luggage+toys_baby_kids+auto_industrial+Books+music_movies_games+Gift_Cards</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gp/navigation/ajax/generic.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.csa.prod-291" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;schemaId&quot;:&quot;ApeSafeframe.csaEvent.1&quot;,&quot;metricName&quot;:&quot;unservedviewabilityfired_amzn:Gateway_right-2_desktop:589e332a-17d0-4382-b320-05e6f4ddc521&quot;,&quot;metricValue&quot;:1,&quot;timestamp&quot;:&quot;2022-12-11T20:16:55.182Z&quot;,&quot;messageId&quot;:&quot;ps1dsm-3dl4jp-yuv5my-4j01hg&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;adplacements&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;meaningful&quot;:&quot;interactive&quot;,&quot;url&quot;:&quot;https://www.amazon.in/&quot;,&quot;server&quot;:&quot;www.amazon.in&quot;,&quot;path&quot;:&quot;/&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;title&quot;:&quot;Online Shopping site in India: Shop Online for Mobiles, Books, Watches, Shoes and More - Amazon.in&quot;,&quot;transitionType&quot;:&quot;refresh&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;,&quot;pageTypeId&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;adCreativeMetaData&quot;:{&quot;id&quot;:&quot;v8z13b-mjleg9-imkvhe-h0hxwm&quot;,&quot;adrender&quot;:&quot;true&quot;,&quot;creativeTemplateName&quot;:&quot;image&quot;,&quot;isLightAds&quot;:&quot;false&quot;,&quot;creativeId&quot;:&quot;578633135025838100&quot;,&quot;adProgramId&quot;:&quot;1001&quot;,&quot;isCardsFlow&quot;:&quot;false&quot;,&quot;ABPStatus&quot;:&quot;NotEnabled&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;dkt0em-4jbwd3-6me79b-i8y9is&quot;,&quot;schemaId&quot;:&quot;csa.InternalCounters.2&quot;,&quot;c&quot;:{&quot;adplacements:adload:unservedviewabilityfired_amzn:Gateway:right-2:desktop&quot;:{&quot;f&quot;:1},&quot;adplacements:adload:unservedviewabilityfired_amzn:589e332a-17d0-4382-b320-05e6f4ddc521&quot;:{&quot;f&quot;:1},&quot;Nav:Hmenu:FirstLayerAjax&quot;:{&quot;f&quot;:1},&quot;adplacements:adload:unservedviewabilityloaded_amzn:Gateway:right-2:desktop&quot;:{&quot;f&quot;:1},&quot;adplacements:adload:unservedviewabilityloaded_amzn:589e332a-17d0-4382-b320-05e6f4ddc521&quot;:{&quot;f&quot;:1},&quot;Nav:Hmenu:MenuAccessibleLatency&quot;:{&quot;f&quot;:201603},&quot;Nav:Hmenu:FirstLayerSuccessTotalTime&quot;:{&quot;f&quot;:0},&quot;Nav:Hmenu:IconFirstClickTime&quot;:{&quot;f&quot;:202},&quot;Nav:Hmenu:IconFirstClickWaitTime&quot;:{&quot;f&quot;:0},&quot;Nav:Hmenu:MainContentAjax&quot;:{&quot;f&quot;:1},&quot;Nav:Hmenu:IconClickActionComplete&quot;:{&quot;f&quot;:1},&quot;Nav:Hmenu:MainContentSuccessTotalTime&quot;:{&quot;f&quot;:0}},&quot;timestamp&quot;:&quot;2022-12-11T20:16:55.183Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;6brq2r-41sxx0-77iv7z-7bdrnw&quot;,&quot;schemaId&quot;:&quot;csa.ContentInteractionsSummary.1&quot;,&quot;w&quot;:{&quot;w5zkt-3fpnzl-j4wcr8-7f47o3&quot;:{&quot;it0&quot;:26},&quot;atmzbx-1r0sfz-clkh2y-lmtsx2&quot;:{&quot;sid&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;ttfv&quot;:202312},&quot;545fk0-25zeys-2yux3g-95rkky&quot;:{&quot;mc&quot;:1},&quot;35bfp4-mhict1-baxlgm-cwfzw5&quot;:{&quot;mc&quot;:1}},&quot;timestamp&quot;:&quot;2022-12-11T20:16:55.197Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;schemaId&quot;:&quot;ApeSafeframe.csaEvent.1&quot;,&quot;metricName&quot;:&quot;unservedviewabilityloaded_amzn:Gateway_right-2_desktop:589e332a-17d0-4382-b320-05e6f4ddc521&quot;,&quot;metricValue&quot;:1,&quot;timestamp&quot;:&quot;2022-12-11T20:16:56.154Z&quot;,&quot;messageId&quot;:&quot;v888nu-pd1c3u-qbxs7o-hhc2bu&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;adplacements&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;meaningful&quot;:&quot;interactive&quot;,&quot;url&quot;:&quot;https://www.amazon.in/&quot;,&quot;server&quot;:&quot;www.amazon.in&quot;,&quot;path&quot;:&quot;/&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;title&quot;:&quot;Online Shopping site in India: Shop Online for Mobiles, Books, Watches, Shoes and More - Amazon.in&quot;,&quot;transitionType&quot;:&quot;refresh&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;,&quot;pageTypeId&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;adCreativeMetaData&quot;:{&quot;id&quot;:&quot;v8z13b-mjleg9-imkvhe-h0hxwm&quot;,&quot;adrender&quot;:&quot;true&quot;,&quot;creativeTemplateName&quot;:&quot;image&quot;,&quot;isLightAds&quot;:&quot;false&quot;,&quot;creativeId&quot;:&quot;578633135025838100&quot;,&quot;adProgramId&quot;:&quot;1001&quot;,&quot;isCardsFlow&quot;:&quot;false&quot;,&quot;ABPStatus&quot;:&quot;NotEnabled&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;f3e8sc-4dsg35-pn9yew-alukf0&quot;,&quot;schemaId&quot;:&quot;csa.ContentLatency.1&quot;,&quot;markers&quot;:{&quot;functional:click&quot;:202350},&quot;timestamp&quot;:&quot;2022-12-11T20:16:56.403Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;545fk0-25zeys-2yux3g-95rkky&quot;,&quot;type&quot;:&quot;widget&quot;,&quot;slotId&quot;:&quot;HamburgerMenuDesktop&quot;,&quot;interactionEvents&quot;:&quot;click&quot;,&quot;iSlotId&quot;:&quot;HamburgerMenuDesktop&quot;,&quot;href&quot;:&quot;javascript: void(0)&quot;,&quot;parentId&quot;:&quot;35bfp4-mhict1-baxlgm-cwfzw5&quot;}}}},{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentView.3&quot;,&quot;timeToViewed&quot;:15,&quot;pageFirstPaintToElementViewed&quot;:202366,&quot;timestamp&quot;:&quot;2022-12-11T20:16:56.419Z&quot;,&quot;messageId&quot;:&quot;i48rkn-qvsz5i-533ec7-y6mqcv&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;atmzbx-1r0sfz-clkh2y-lmtsx2&quot;,&quot;class&quot;:&quot;celwidget nav-sprite-v1&quot;,&quot;slotId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;legacyId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;type&quot;:&quot;widget&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;drowef-duc60i-6enpi1-v7r4zb&quot;,&quot;schemaId&quot;:&quot;csa.Metric.3&quot;,&quot;metrics&quot;:{&quot;firstInputDelay&quot;:18},&quot;dimensions&quot;:{},&quot;timestamp&quot;:&quot;2022-12-11T20:16:56.963Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentInteraction.1&quot;,&quot;interaction&quot;:&quot;click&quot;,&quot;interactionData&quot;:{&quot;interactionX&quot;:&quot;41&quot;,&quot;interactionY&quot;:&quot;78&quot;,&quot;parentChain&quot;:&quot;HTML/BODY/DIV/HEADER/DIV/DIV/DIV/A/SPAN&quot;,&quot;href&quot;:&quot;javascript: void(0)&quot;},&quot;messageId&quot;:&quot;emewmy-lnlr0j-frzyzq-t4aygy&quot;,&quot;attribution&quot;:&quot;//*[@id=&apos;nav-hamburger-menu&apos;]/SPAN&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:16:57.048Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;545fk0-25zeys-2yux3g-95rkky&quot;,&quot;type&quot;:&quot;widget&quot;,&quot;slotId&quot;:&quot;HamburgerMenuDesktop&quot;,&quot;interactionEvents&quot;:&quot;click&quot;,&quot;iSlotId&quot;:&quot;HamburgerMenuDesktop&quot;,&quot;href&quot;:&quot;javascript: void(0)&quot;,&quot;parentId&quot;:&quot;35bfp4-mhict1-baxlgm-cwfzw5&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;97a81y-tsajol-cgpnz8-3ykfv4&quot;,&quot;schemaId&quot;:&quot;csa.Metric.3&quot;,&quot;metrics&quot;:{&quot;documentCumulativeLayoutShiftToFirstInput&quot;:0},&quot;dimensions&quot;:{},&quot;timestamp&quot;:&quot;2022-12-11T20:16:57.083Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentImpressed.2&quot;,&quot;timeToImpressed&quot;:1021,&quot;pageFirstPaintToElementImpressed&quot;:203372,&quot;timestamp&quot;:&quot;2022-12-11T20:16:57.425Z&quot;,&quot;messageId&quot;:&quot;iuc3d8-cx9wix-4bcl58-4w5sil&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;atmzbx-1r0sfz-clkh2y-lmtsx2&quot;,&quot;class&quot;:&quot;celwidget nav-sprite-v1&quot;,&quot;slotId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;legacyId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;type&quot;:&quot;widget&quot;}}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.csa.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/canonical.html-292" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/canonical.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-295" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv6</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-296" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv4</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/gp/navigation/ajax/ajax-reftag-logger.html-294" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">nav_em_1_1_1_6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1670789821911</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/gp/navigation/ajax/ajax-reftag-logger.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/gp/navigation/ajax/ajax-reftag-logger.html-293" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">Gateway</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">nav_em_1_1_1_6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1670789821890</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/gp/navigation/ajax/ajax-reftag-logger.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OE/-297" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rid&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;sid&quot;:&quot;257-6224871-8744968&quot;,&quot;mid&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;sn&quot;:&quot;www.amazon.in&quot;,&quot;reqs&quot;:[{&quot;cel&quot;:{&quot;k&quot;:&quot;efo&quot;,&quot;t&quot;:200381,&quot;s&quot;:&quot;pageviz&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:unservedviewabilityfired_amzn:Gateway:right-2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:200387}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:unservedviewabilityfired_amzn:589e332a-17d0-4382-b320-05e6f4ddc521&quot;,&quot;value&quot;:1,&quot;t&quot;:200387}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-8&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:0,&quot;x&quot;:-622.8333129882812,&quot;y&quot;:99,&quot;t&quot;:200406,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-1&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:0,&quot;x&quot;:640.1666870117188,&quot;y&quot;:99,&quot;t&quot;:200406,&quot;k&quot;:&quot;ewi&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Hmenu:FirstLayerAjax&quot;,&quot;value&quot;:1,&quot;t&quot;:201222}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:unservedviewabilityloaded_amzn:Gateway:right-2:desktop&quot;,&quot;value&quot;:1,&quot;t&quot;:201357}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;adplacements:adload:unservedviewabilityloaded_amzn:589e332a-17d0-4382-b320-05e6f4ddc521&quot;,&quot;value&quot;:1,&quot;t&quot;:201358}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Hmenu:MenuAccessibleLatency&quot;,&quot;value&quot;:201603,&quot;t&quot;:201603}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Hmenu:FirstLayerSuccessTotalTime&quot;,&quot;value&quot;:0,&quot;t&quot;:201608}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-8&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:1,&quot;x&quot;:-1263,&quot;y&quot;:99,&quot;t&quot;:201670,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-1&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:99,&quot;t&quot;:201670,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;w&quot;:1262.6666259765625,&quot;h&quot;:595.3333129882812,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:201670,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget nav-sprite-v1&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mcm&quot;,&quot;w&quot;:1263,&quot;h&quot;:6116,&quot;t&quot;:202161,&quot;x&quot;:41,&quot;y&quot;:78,&quot;p&quot;:&quot;//*[@id=&apos;nav-hamburger-menu&apos;]/SPAN&quot;,&quot;n&quot;:&quot;SPAN&quot;,&quot;dt&quot;:19,&quot;c&quot;:[&quot;hm-icon-label&quot;]}},{&quot;cel&quot;:{&quot;k&quot;:&quot;res_mcm&quot;,&quot;t&quot;:202161,&quot;m&quot;:85}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Hmenu:IconFirstClickTime&quot;,&quot;value&quot;:202,&quot;t&quot;:202254}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Hmenu:IconFirstClickWaitTime&quot;,&quot;value&quot;:0,&quot;t&quot;:202254}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Hmenu:MainContentAjax&quot;,&quot;value&quot;:1,&quot;t&quot;:202254}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Hmenu:IconClickActionComplete&quot;,&quot;value&quot;:1,&quot;t&quot;:202286}},{&quot;cel&quot;:{&quot;n&quot;:&quot;Navigation-desktop-navbar&quot;,&quot;w&quot;:1280,&quot;h&quot;:99,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-hero-order&quot;,&quot;w&quot;:1280,&quot;h&quot;:230,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:99,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-ftGr-desktop-hero-2&quot;,&quot;w&quot;:1263,&quot;h&quot;:600,&quot;d&quot;:0,&quot;x&quot;:1263,&quot;y&quot;:99,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;gw-desktop-hero-right-cel&quot;,&quot;w&quot;:80,&quot;h&quot;:250,&quot;d&quot;:0,&quot;x&quot;:1200,&quot;y&quot;:99,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-1&quot;,&quot;w&quot;:313.33331298828125,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:349,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-2&quot;,&quot;w&quot;:313.3333435058594,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:323.33331298828125,&quot;y&quot;:349,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-3&quot;,&quot;w&quot;:313.33331298828125,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:636.6666870117188,&quot;y&quot;:349,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-1-D1&quot;,&quot;w&quot;:300,&quot;h&quot;:150,&quot;d&quot;:0,&quot;x&quot;:960,&quot;y&quot;:349,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-1-D2&quot;,&quot;w&quot;:300,&quot;h&quot;:250,&quot;d&quot;:0,&quot;x&quot;:960,&quot;y&quot;:519,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Gateway:right-2:desktop&quot;,&quot;w&quot;:300,&quot;h&quot;:270,&quot;d&quot;:0,&quot;x&quot;:960,&quot;y&quot;:519,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-4&quot;,&quot;w&quot;:313.33331298828125,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:789,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-5&quot;,&quot;w&quot;:313.3333435058594,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:323.33331298828125,&quot;y&quot;:789,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-6&quot;,&quot;w&quot;:313.33331298828125,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:636.6666870117188,&quot;y&quot;:789,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-grid-7&quot;,&quot;w&quot;:320,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:950,&quot;y&quot;:789,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-top&quot;,&quot;w&quot;:1260,&quot;h&quot;:361.6333312988281,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:1229,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-1&quot;,&quot;w&quot;:1260,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:1610.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-2&quot;,&quot;w&quot;:1260,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:1915.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-1&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:2220.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-2&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:325,&quot;y&quot;:2220.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-3&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:640,&quot;y&quot;:2220.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-4&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:955,&quot;y&quot;:2220.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-3&quot;,&quot;w&quot;:1260,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:2660.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-4&quot;,&quot;w&quot;:1260,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:2965.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-ad-center-1&quot;,&quot;w&quot;:1260,&quot;h&quot;:250,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:3270.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;adplacements:Gateway:desktop-ad-center-1:desktop&quot;,&quot;w&quot;:970,&quot;h&quot;:267,&quot;d&quot;:0,&quot;x&quot;:155,&quot;y&quot;:3270.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-5&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:3540.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-6&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:325,&quot;y&quot;:3540.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-7&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:640,&quot;y&quot;:3540.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-8&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:955,&quot;y&quot;:3540.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-5&quot;,&quot;w&quot;:1260,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:3980.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-6&quot;,&quot;w&quot;:1260,&quot;h&quot;:285,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:4285.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-9&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:4590.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-10&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:325,&quot;y&quot;:4590.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-11&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:640,&quot;y&quot;:4590.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-btf-grid-12&quot;,&quot;w&quot;:315,&quot;h&quot;:420,&quot;d&quot;:0,&quot;x&quot;:955,&quot;y&quot;:4590.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;desktop-7&quot;,&quot;w&quot;:1260,&quot;h&quot;:281.5,&quot;d&quot;:0,&quot;x&quot;:10,&quot;y&quot;:5030.63330078125,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;w&quot;:1280,&quot;h&quot;:595.3333129882812,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;nav_sitewide_msg&quot;,&quot;w&quot;:400,&quot;h&quot;:39,&quot;d&quot;:0,&quot;x&quot;:880,&quot;y&quot;:60,&quot;t&quot;:202352,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;w&quot;:1280,&quot;h&quot;:6116,&quot;t&quot;:202385,&quot;k&quot;:&quot;doi&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Hmenu:MainContentSuccessTotalTime&quot;,&quot;value&quot;:0,&quot;t&quot;:202679}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:638,&quot;y&quot;:592,&quot;t&quot;:200848},{&quot;x&quot;:705,&quot;y&quot;:383,&quot;t&quot;:200928},{&quot;x&quot;:719,&quot;y&quot;:300,&quot;t&quot;:200960},{&quot;x&quot;:709,&quot;y&quot;:231,&quot;t&quot;:200989},{&quot;x&quot;:659,&quot;y&quot;:157,&quot;t&quot;:201023},{&quot;x&quot;:533,&quot;y&quot;:79,&quot;t&quot;:201056},{&quot;x&quot;:364,&quot;y&quot;:37,&quot;t&quot;:201122},{&quot;x&quot;:243,&quot;y&quot;:39,&quot;t&quot;:201187},{&quot;x&quot;:91,&quot;y&quot;:62,&quot;t&quot;:201453},{&quot;x&quot;:41,&quot;y&quot;:78,&quot;t&quot;:201836},{&quot;x&quot;:89,&quot;y&quot;:194,&quot;t&quot;:203537}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:500}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:102,&quot;y&quot;:226,&quot;t&quot;:203584},{&quot;x&quot;:110,&quot;y&quot;:273,&quot;t&quot;:203778},{&quot;x&quot;:129,&quot;y&quot;:239,&quot;t&quot;:204852},{&quot;x&quot;:264,&quot;y&quot;:204,&quot;t&quot;:205052},{&quot;x&quot;:308,&quot;y&quot;:198,&quot;t&quot;:205186}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:333}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mcm&quot;,&quot;w&quot;:1280,&quot;h&quot;:6116,&quot;t&quot;:206975,&quot;x&quot;:308,&quot;y&quot;:198,&quot;p&quot;:&quot;//*[@id=&apos;hmenu-content&apos;]/UL/LI[7]/A&quot;,&quot;n&quot;:&quot;A&quot;,&quot;dt&quot;:21,&quot;r&quot;:&quot;https://www.amazon.in/&quot;,&quot;c&quot;:[&quot;hmenu-item&quot;]}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:207404}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:208410}},{&quot;csm&quot;:{&quot;k&quot;:&quot;chk&quot;,&quot;f&quot;:13,&quot;l&quot;:{&quot;csmcount&quot;:373,&quot;cel&quot;:160,&quot;csm&quot;:13,&quot;navigation&quot;:1,&quot;jserr-rw&quot;:3},&quot;s&quot;:&quot;full&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;foresterPayloadSize&quot;,&quot;t&quot;:0,&quot;value&quot;:7097}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OE/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OE/-298" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rid&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;sid&quot;:&quot;257-6224871-8744968&quot;,&quot;mid&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;sn&quot;:&quot;www.amazon.in&quot;,&quot;reqs&quot;:[{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:307,&quot;y&quot;:198,&quot;t&quot;:208536},{&quot;x&quot;:307,&quot;y&quot;:197,&quot;t&quot;:209132}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:250}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:210394}},{&quot;csm&quot;:{&quot;k&quot;:&quot;chk&quot;,&quot;f&quot;:14,&quot;l&quot;:{&quot;csmcount&quot;:373,&quot;cel&quot;:162,&quot;csm&quot;:14,&quot;navigation&quot;:1,&quot;jserr-rw&quot;:3},&quot;s&quot;:&quot;full&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;foresterPayloadSize&quot;,&quot;t&quot;:0,&quot;value&quot;:425}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OE/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.csa.prod-299" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentInteraction.1&quot;,&quot;interaction&quot;:&quot;click&quot;,&quot;interactionData&quot;:{&quot;interactionX&quot;:&quot;308&quot;,&quot;interactionY&quot;:&quot;198&quot;,&quot;parentChain&quot;:&quot;HTML/BODY/DIV/DIV/DIV/UL/LI/A&quot;,&quot;href&quot;:&quot;https://www.amazon.in/&quot;},&quot;messageId&quot;:&quot;gfvcwz-tc2j1r-i1qms8-qs84vi&quot;,&quot;attribution&quot;:&quot;//*[@id=&apos;hmenu-content&apos;]/UL/LI[7]/A&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:17:01.881Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;atmzbx-1r0sfz-clkh2y-lmtsx2&quot;,&quot;class&quot;:&quot;celwidget nav-sprite-v1&quot;,&quot;slotId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;legacyId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;type&quot;:&quot;widget&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;6brq2r-41sxx0-77iv7z-7bdrnw&quot;,&quot;schemaId&quot;:&quot;csa.ContentInteractionsSummary.1&quot;,&quot;w&quot;:{&quot;atmzbx-1r0sfz-clkh2y-lmtsx2&quot;:{&quot;mc&quot;:1,&quot;it0&quot;:10007,&quot;it50&quot;:10009,&quot;it100&quot;:10009},&quot;35bfp4-mhict1-baxlgm-cwfzw5&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;n84iep-iryck3-s34ee1-d8abtr&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;jokmuz-e1qygh-vvcin3-yo6ox5&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257},&quot;j05xm3-n67sav-2ue9bh-ad0crt&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257},&quot;fr6qgc-hitlwh-bt29en-7twxmm&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257},&quot;i097bn-xz812g-4za5cb-w81684&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;ggylv0-uw1rc7-a3ypxi-s9ye2j&quot;:{&quot;it0&quot;:11255},&quot;r3ewkh-s9yr5x-terng2-m90qmh&quot;:{&quot;it0&quot;:11255},&quot;t9at12-4odju5-w3knv4-gtbfrm&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;545fk0-25zeys-2yux3g-95rkky&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;lp03i5-sz13u4-fv52tb-xhhtkb&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;1z3zr-5h7627-55o0zi-gdjfak&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;ln2eug-kp3p8u-yt0y3o-uey0xs&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;ans9pj-2e1e7q-sbbafl-cj46qs&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;sqpk3y-c3d41m-y5rvt3-2ar53&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;9az13d-25h59b-lnifu1-23hd71&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;2l8jdm-1ykgdl-v6ofid-vpalrq&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;8ic10n-vrb7m7-geshxw-s5jz1n&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;zbyqcg-xxf2dk-xcfxn9-j30p4u&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;dn21bu-98ru3l-5stjmy-j5qjl4&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;7z36ya-p1eip4-5n7r8z-5wtx15&quot;:{&quot;it0&quot;:11255,&quot;it50&quot;:11257,&quot;it100&quot;:11257},&quot;mcibwm-ouflz4-l263b4-vlv08g&quot;:{&quot;it0&quot;:11255},&quot;hilrds-pwwrh8-corwrr-r8gkm6&quot;:{&quot;it0&quot;:11229,&quot;it50&quot;:11174},&quot;t98tay-10kbr1-be6pp-j415y9&quot;:{&quot;it0&quot;:9293}},&quot;timestamp&quot;:&quot;2022-12-11T20:17:01.882Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.csa.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OE/-300" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rid&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;sid&quot;:&quot;257-6224871-8744968&quot;,&quot;mid&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;sn&quot;:&quot;www.amazon.in&quot;,&quot;reqs&quot;:[{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:307,&quot;y&quot;:198,&quot;t&quot;:211082},{&quot;x&quot;:319,&quot;y&quot;:275,&quot;t&quot;:211495},{&quot;x&quot;:341,&quot;y&quot;:291,&quot;t&quot;:211645},{&quot;x&quot;:399,&quot;y&quot;:293,&quot;t&quot;:211779},{&quot;x&quot;:451,&quot;y&quot;:268,&quot;t&quot;:211912},{&quot;x&quot;:476,&quot;y&quot;:239,&quot;t&quot;:212168},{&quot;x&quot;:321,&quot;y&quot;:221,&quot;t&quot;:212529},{&quot;x&quot;:303,&quot;y&quot;:220,&quot;t&quot;:212561}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:400}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:286,&quot;y&quot;:219,&quot;t&quot;:212595},{&quot;x&quot;:96,&quot;y&quot;:215,&quot;t&quot;:213137},{&quot;x&quot;:96,&quot;y&quot;:209,&quot;t&quot;:213287},{&quot;x&quot;:96,&quot;y&quot;:211,&quot;t&quot;:214639},{&quot;x&quot;:99,&quot;y&quot;:223,&quot;t&quot;:215329},{&quot;x&quot;:99,&quot;y&quot;:225,&quot;t&quot;:215473}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:333}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:99,&quot;y&quot;:226,&quot;t&quot;:218529},{&quot;x&quot;:99,&quot;y&quot;:229,&quot;t&quot;:218562}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:285}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:219573}},{&quot;csm&quot;:{&quot;k&quot;:&quot;chk&quot;,&quot;f&quot;:15,&quot;l&quot;:{&quot;csmcount&quot;:373,&quot;cel&quot;:166,&quot;csm&quot;:15,&quot;navigation&quot;:1,&quot;jserr-rw&quot;:3},&quot;s&quot;:&quot;full&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;foresterPayloadSize&quot;,&quot;t&quot;:0,&quot;value&quot;:936}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OE/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OE/-301" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rid&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;sid&quot;:&quot;257-6224871-8744968&quot;,&quot;mid&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;sn&quot;:&quot;www.amazon.in&quot;,&quot;reqs&quot;:[{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:99,&quot;y&quot;:231,&quot;t&quot;:218591},{&quot;x&quot;:103,&quot;y&quot;:299,&quot;t&quot;:219040},{&quot;x&quot;:103,&quot;y&quot;:298,&quot;t&quot;:219921}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:250}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:222574}},{&quot;csm&quot;:{&quot;k&quot;:&quot;chk&quot;,&quot;f&quot;:16,&quot;l&quot;:{&quot;csmcount&quot;:373,&quot;cel&quot;:168,&quot;csm&quot;:16,&quot;navigation&quot;:1,&quot;jserr-rw&quot;:3},&quot;s&quot;:&quot;full&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;foresterPayloadSize&quot;,&quot;t&quot;:0,&quot;value&quot;:453}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OE/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OE/-303" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rid&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;sid&quot;:&quot;257-6224871-8744968&quot;,&quot;mid&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;sn&quot;:&quot;www.amazon.in&quot;,&quot;reqs&quot;:[{&quot;cel&quot;:{&quot;k&quot;:&quot;mcm&quot;,&quot;w&quot;:1280,&quot;h&quot;:6116,&quot;t&quot;:223957,&quot;x&quot;:128,&quot;y&quot;:245,&quot;p&quot;:&quot;//*[@id=&apos;hmenu-content&apos;]/UL[2]/LI[10]/A&quot;,&quot;n&quot;:&quot;A&quot;,&quot;dt&quot;:19,&quot;r&quot;:&quot;https://www.amazon.in/gp/browse.html?node=14156834031&amp;ref_=nav_em__shopall_catpage_0_2_2_9&quot;,&quot;c&quot;:[&quot;hmenu-item&quot;]}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.PDM.TotalExecutions&quot;,&quot;value&quot;:56,&quot;t&quot;:224098}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.VPI.TotalExecutions&quot;,&quot;value&quot;:1,&quot;t&quot;:224098}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.VPI.TotalExecutionTime&quot;,&quot;value&quot;:0,&quot;t&quot;:224098}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.VPI.AverageExecutionTime&quot;,&quot;value&quot;:0,&quot;t&quot;:224098}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.widgets.batchesProcessed&quot;,&quot;value&quot;:40,&quot;t&quot;:224098}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:103,&quot;y&quot;:299,&quot;t&quot;:222144},{&quot;x&quot;:103,&quot;y&quot;:300,&quot;t&quot;:222194},{&quot;x&quot;:103,&quot;y&quot;:301,&quot;t&quot;:222362},{&quot;x&quot;:107,&quot;y&quot;:341,&quot;t&quot;:223153},{&quot;x&quot;:128,&quot;y&quot;:245,&quot;t&quot;:223851},{&quot;x&quot;:128,&quot;y&quot;:244,&quot;t&quot;:223984},{&quot;x&quot;:128,&quot;y&quot;:244,&quot;t&quot;:224098}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:333}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:224100}},{&quot;cel&quot;:{&quot;k&quot;:&quot;eod&quot;,&quot;t0&quot;:1670789614796,&quot;t&quot;:224100}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;armored-cxguardrails.unresponsive-clicks.violations&quot;,&quot;value&quot;:0,&quot;t&quot;:224100}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;armored-cxguardrails.unresponsive-clicks.violationRate&quot;,&quot;value&quot;:0,&quot;t&quot;:224100}},{&quot;csm&quot;:{&quot;k&quot;:&quot;chk&quot;,&quot;f&quot;:17,&quot;l&quot;:{&quot;csmcount&quot;:380,&quot;cel&quot;:172,&quot;csm&quot;:17,&quot;navigation&quot;:1,&quot;jserr-rw&quot;:3},&quot;s&quot;:&quot;full&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;foresterPayloadSize&quot;,&quot;t&quot;:0,&quot;value&quot;:1442}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OE/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.csa.prod-302" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentInteraction.1&quot;,&quot;interaction&quot;:&quot;click&quot;,&quot;interactionData&quot;:{&quot;interactionX&quot;:&quot;128&quot;,&quot;interactionY&quot;:&quot;244&quot;,&quot;parentChain&quot;:&quot;HTML/BODY/DIV/DIV/DIV/UL/LI/A&quot;,&quot;href&quot;:&quot;https://www.amazon.in/gp/browse.html?node=14156834031&amp;ref_=nav_em__shopall_catpage_0_2_2_9&quot;},&quot;messageId&quot;:&quot;lt1jlr-w53jwy-wgxi2-6juwnd&quot;,&quot;attribution&quot;:&quot;//*[@id=&apos;hmenu-content&apos;]/UL[2]/LI[10]/A&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:17:18.887Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;atmzbx-1r0sfz-clkh2y-lmtsx2&quot;,&quot;class&quot;:&quot;celwidget nav-sprite-v1&quot;,&quot;slotId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;legacyId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;type&quot;:&quot;widget&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;6brq2r-41sxx0-77iv7z-7bdrnw&quot;,&quot;schemaId&quot;:&quot;csa.ContentInteractionsSummary.1&quot;,&quot;w&quot;:{&quot;atmzbx-1r0sfz-clkh2y-lmtsx2&quot;:{&quot;mc&quot;:1,&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;35bfp4-mhict1-baxlgm-cwfzw5&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;n84iep-iryck3-s34ee1-d8abtr&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;jokmuz-e1qygh-vvcin3-yo6ox5&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463},&quot;j05xm3-n67sav-2ue9bh-ad0crt&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463},&quot;fr6qgc-hitlwh-bt29en-7twxmm&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463},&quot;i097bn-xz812g-4za5cb-w81684&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;ggylv0-uw1rc7-a3ypxi-s9ye2j&quot;:{&quot;it0&quot;:12465},&quot;r3ewkh-s9yr5x-terng2-m90qmh&quot;:{&quot;it0&quot;:12465},&quot;t9at12-4odju5-w3knv4-gtbfrm&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;545fk0-25zeys-2yux3g-95rkky&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;lp03i5-sz13u4-fv52tb-xhhtkb&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;1z3zr-5h7627-55o0zi-gdjfak&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;ln2eug-kp3p8u-yt0y3o-uey0xs&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;ans9pj-2e1e7q-sbbafl-cj46qs&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;sqpk3y-c3d41m-y5rvt3-2ar53&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;9az13d-25h59b-lnifu1-23hd71&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;2l8jdm-1ykgdl-v6ofid-vpalrq&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;8ic10n-vrb7m7-geshxw-s5jz1n&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;zbyqcg-xxf2dk-xcfxn9-j30p4u&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;dn21bu-98ru3l-5stjmy-j5qjl4&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;7z36ya-p1eip4-5n7r8z-5wtx15&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463,&quot;it100&quot;:12464},&quot;mcibwm-ouflz4-l263b4-vlv08g&quot;:{&quot;it0&quot;:12465},&quot;hilrds-pwwrh8-corwrr-r8gkm6&quot;:{&quot;it0&quot;:12465,&quot;it50&quot;:12463},&quot;t98tay-10kbr1-be6pp-j415y9&quot;:{&quot;it0&quot;:12465}},&quot;timestamp&quot;:&quot;2022-12-11T20:17:18.888Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;dkt0em-4jbwd3-6me79b-i8y9is&quot;,&quot;schemaId&quot;:&quot;csa.InternalCounters.2&quot;,&quot;c&quot;:{&quot;aui:resource_count&quot;:{&quot;s&quot;:45,&quot;l&quot;:5,&quot;c&quot;:9}},&quot;timestamp&quot;:&quot;2022-12-11T20:17:18.891Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;activity&quot;:{&quot;scrollCounts&quot;:0,&quot;reachedDepth&quot;:595,&quot;horizontalScrollDistance&quot;:0,&quot;dwellTime&quot;:28727},&quot;dimensions&quot;:{&quot;availableScreenWidth&quot;:1280,&quot;availableScreenHeight&quot;:680,&quot;documentWidth&quot;:1280,&quot;documentHeight&quot;:6116,&quot;screenWidth&quot;:1280,&quot;screenHeight&quot;:720,&quot;viewportWidth&quot;:1280,&quot;viewportHeight&quot;:595},&quot;schemaId&quot;:&quot;csa.PageInteractionsSummary.1&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:17:18.892Z&quot;,&quot;messageId&quot;:&quot;22s37a-qe09v-o4ikxn-ae2rdr&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;2chbmh-3tue1u-f90ec4-xeqngc&quot;,&quot;schemaId&quot;:&quot;csa.Metric.3&quot;,&quot;metrics&quot;:{&quot;totalBlockingTime&quot;:0,&quot;totalBlockingTimeInclLCP&quot;:0,&quot;maxBlockingTime&quot;:-1},&quot;dimensions&quot;:{},&quot;timestamp&quot;:&quot;2022-12-11T20:17:18.892Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.csa.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/gp/browse.html-304" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="node" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">node</stringProp>
                  <stringProp name="Argument.value">14156834031</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref_</stringProp>
                  <stringProp name="Argument.value">nav_em__shopall_catpage_0_2_2_9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/gp/browse.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.csa.prod-305" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;messageId&quot;:&quot;dkt0em-4jbwd3-6me79b-i8y9is&quot;,&quot;schemaId&quot;:&quot;csa.InternalCounters.2&quot;,&quot;c&quot;:{&quot;cel.PDM.TotalExecutions&quot;:{&quot;f&quot;:56},&quot;cel.VPI.TotalExecutions&quot;:{&quot;f&quot;:1},&quot;cel.VPI.TotalExecutionTime&quot;:{&quot;f&quot;:0},&quot;cel.VPI.AverageExecutionTime&quot;:{&quot;f&quot;:0},&quot;cel.widgets.batchesProcessed&quot;:{&quot;f&quot;:40},&quot;armored-cxguardrails.unresponsive-clicks.violations&quot;:{&quot;f&quot;:0},&quot;armored-cxguardrails.unresponsive-clicks.violationRate&quot;:{&quot;f&quot;:0},&quot;QF-N:SN:QN:TN&quot;:{&quot;f&quot;:1}},&quot;timestamp&quot;:&quot;2022-12-11T20:17:18.894Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;2chbmh-3tue1u-f90ec4-xeqngc&quot;,&quot;schemaId&quot;:&quot;csa.Metric.3&quot;,&quot;metrics&quot;:{&quot;totalBlockingTime&quot;:0,&quot;totalBlockingTimeInclLCP&quot;:0,&quot;maxBlockingTime&quot;:-1},&quot;dimensions&quot;:{},&quot;timestamp&quot;:&quot;2022-12-11T20:17:20.828Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;activity&quot;:{&quot;scrollCounts&quot;:0,&quot;reachedDepth&quot;:595,&quot;horizontalScrollDistance&quot;:0,&quot;dwellTime&quot;:1937},&quot;dimensions&quot;:{&quot;availableScreenWidth&quot;:1280,&quot;availableScreenHeight&quot;:680,&quot;documentWidth&quot;:1280,&quot;documentHeight&quot;:6116,&quot;screenWidth&quot;:1280,&quot;screenHeight&quot;:720,&quot;viewportWidth&quot;:1280,&quot;viewportHeight&quot;:595},&quot;schemaId&quot;:&quot;csa.PageInteractionsSummary.1&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:17:20.829Z&quot;,&quot;messageId&quot;:&quot;qn183b-hzwhv0-hng890-gk575l&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;kc9i6w-o4qanu-e07xnp-6ms5vj&quot;,&quot;requestId&quot;:&quot;09G78ZEE47P7Y6DFC7DT&quot;,&quot;pageType&quot;:&quot;Gateway&quot;,&quot;subPageType&quot;:&quot;desktop&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.csa.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/21V0Eey-rEL.css-309" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/ACSWidgetAssets-carousel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/ACSWidgetAssets-carousel</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/21V0Eey-rEL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/21JyFMMl0UL.css-306" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/OctopusBrowsePageAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/OctopusBrowsePageAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/21JyFMMl0UL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/61ubxKsFvvL.css-310" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/ACSWidgetAssets-contentGrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/ACSWidgetAssets-contentGrid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/61ubxKsFvvL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/0152SLDk8CL.js-311" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/OctopusBrowsePageAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/OctopusBrowsePageAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/0152SLDk8CL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/2129qy-Kh8L.js-345" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="xcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xcp</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/2129qy-Kh8L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/S/sash/5wejH04P3ogfQ-4.svg-347" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/S/sash/5wejH04P3ogfQ-4.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://images-eu.ssl-images-amazon.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="ProductPage" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/gp/navigation/ajax/generic.html-369" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ajaxTemplate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ajaxTemplate</stringProp>
                  <stringProp name="Argument.value">hMenuDesktopFirstLayer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">Landing</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hmDataAjaxHint" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hmDataAjaxHint</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isFreshRegion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isFreshRegion</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isFreshCustomer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isFreshCustomer</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isPrimeMember" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPrimeMember</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isPrimeDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPrimeDay</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isSmile" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSmile</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isBackup" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isBackup</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="firstName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">firstName</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="navDeviceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">navDeviceType</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hashCustomerAndSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hashCustomerAndSessionId</stringProp>
                  <stringProp name="Argument.value">8ce346d1392481fc2963741fddcc69a0168acadf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="environmentVFI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">environmentVFI</stringProp>
                  <stringProp name="Argument.value">AmazonNavigationCards%2Fdevelopment%40B6106048915-AL2_x86_64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageCode</stringProp>
                  <stringProp name="Argument.value">en_IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isExportMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isExportMode</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/gp/navigation/ajax/generic.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/gp/browse.html?node=14156834031&amp;ref_=nav_em__shopall_catpage_0_2_2_9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/gp/navigation/ajax/generic.html-376" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ajaxTemplate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ajaxTemplate</stringProp>
                  <stringProp name="Argument.value">hMenuDesktopFirstLayer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">Landing</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hmDataAjaxHint" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hmDataAjaxHint</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isFreshRegion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isFreshRegion</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isFreshCustomer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isFreshCustomer</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isPrimeMember" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPrimeMember</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isPrimeDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPrimeDay</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isSmile" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSmile</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="regionalStores%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">regionalStores%5B%5D</stringProp>
                  <stringProp name="Argument.value">ctnow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isBackup" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isBackup</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="firstName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">firstName</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="navDeviceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">navDeviceType</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hashCustomerAndSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hashCustomerAndSessionId</stringProp>
                  <stringProp name="Argument.value">8ce346d1392481fc2963741fddcc69a0168acadf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="environmentVFI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">environmentVFI</stringProp>
                  <stringProp name="Argument.value">AmazonNavigationCards%2Fdevelopment%40B6106048915-AL2_x86_64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageCode</stringProp>
                  <stringProp name="Argument.value">en_IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isExportMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isExportMode</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/gp/navigation/ajax/generic.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/gp/browse.html?node=14156834031&amp;ref_=nav_em__shopall_catpage_0_2_2_9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OE/-373" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rid&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;sid&quot;:&quot;257-6224871-8744968&quot;,&quot;mid&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;sn&quot;:&quot;www.amazon.in&quot;,&quot;reqs&quot;:[{&quot;cel&quot;:{&quot;w&quot;:1280,&quot;h&quot;:595,&quot;x&quot;:0,&quot;y&quot;:145.3333282470703,&quot;t&quot;:120998,&quot;k&quot;:&quot;vpi&quot;}},{&quot;cel&quot;:{&quot;w&quot;:1280,&quot;h&quot;:595,&quot;x&quot;:0,&quot;y&quot;:398,&quot;t&quot;:121132,&quot;k&quot;:&quot;vpi&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:8,&quot;t&quot;:121233}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:9,&quot;t&quot;:121234}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:10,&quot;t&quot;:121235}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:11,&quot;t&quot;:121235}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:12,&quot;t&quot;:121236}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_asks&quot;,&quot;value&quot;:13,&quot;t&quot;:121236}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_fulfilled&quot;,&quot;value&quot;:8,&quot;t&quot;:121262}},{&quot;cel&quot;:{&quot;w&quot;:1280,&quot;h&quot;:595,&quot;x&quot;:0,&quot;y&quot;:416,&quot;t&quot;:121265,&quot;k&quot;:&quot;vpi&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_fulfilled&quot;,&quot;value&quot;:9,&quot;t&quot;:121266}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_fulfilled&quot;,&quot;value&quot;:10,&quot;t&quot;:121267}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_fulfilled&quot;,&quot;value&quot;:11,&quot;t&quot;:121267}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_fulfilled&quot;,&quot;value&quot;:12,&quot;t&quot;:121268}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;aui:preload_fulfilled&quot;,&quot;value&quot;:13,&quot;t&quot;:121269}},{&quot;cel&quot;:{&quot;n&quot;:&quot;b54e2c67-1afd-4ad9-84b3-1d361518c6ab&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:396,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:959.0999755859375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_carousel_merchandised-search-4&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:396,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:959.0999755859375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;cc46bf6f-61fc-4ba5-91b6-6d63905ae229&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:925.9000244140625,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:1367.0999755859375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:925.9000244140625,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:1367.0999755859375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row1-col1&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:40.51666259765625,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:1367.0999755859375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row2-col1&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:266.6499938964844,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:1427.61669921875,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row2-col2&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:265.7833251953125,&quot;d&quot;:0,&quot;x&quot;:488.1333312988281,&quot;y&quot;:1427.61669921875,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row2-col3&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:266.6499938964844,&quot;d&quot;:0,&quot;x&quot;:746.2666625976562,&quot;y&quot;:1427.61669921875,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row2-col4&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:261.5333251953125,&quot;d&quot;:0,&quot;x&quot;:1004.4000244140625,&quot;y&quot;:1427.61669921875,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row3-col1&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:266.6500244140625,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:1714.2666015625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row3-col2&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:261.5333251953125,&quot;d&quot;:0,&quot;x&quot;:488.1333312988281,&quot;y&quot;:1714.2666015625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row3-col3&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:265.7833251953125,&quot;d&quot;:0,&quot;x&quot;:746.2666625976562,&quot;y&quot;:1714.2666015625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row3-col4&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:261.5333251953125,&quot;d&quot;:0,&quot;x&quot;:1004.4000244140625,&quot;y&quot;:1714.2666015625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row4-col1&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:272.08331298828125,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2000.9166259765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row4-col2&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:261.5333251953125,&quot;d&quot;:0,&quot;x&quot;:488.1333312988281,&quot;y&quot;:2000.9166259765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row4-col3&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:266.6499938964844,&quot;d&quot;:0,&quot;x&quot;:746.2666625976562,&quot;y&quot;:2000.9166259765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-7_row4-col4&quot;,&quot;w&quot;:238.6666717529297,&quot;h&quot;:266.6499938964844,&quot;d&quot;:0,&quot;x&quot;:1004.4000244140625,&quot;y&quot;:2000.9166259765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;dad6a6d7-d7da-47c1-9333-066d175437a1&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:189.10000610351562,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2293,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-8&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:189.10000610351562,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2293,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-8_row1-col1&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:169.10000610351562,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2293,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;6d6ac3e7-a749-4392-864e-542b597494f1&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:386,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2482.10009765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-9&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:386,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2482.10009765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-9_row1-col1&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:366,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2482.10009765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;322d67b1-f766-4604-a1f1-3b8910e2bd62&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:305.3999938964844,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2868.10009765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-10&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:305.3999938964844,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2868.10009765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-10_row1-col1&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:50.21665954589844,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2868.10009765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-10_row2-col1&quot;,&quot;w&quot;:152.23333740234375,&quot;h&quot;:215.18333435058594,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2938.316650390625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-10_row2-col2&quot;,&quot;w&quot;:152.23333740234375,&quot;h&quot;:215.18333435058594,&quot;d&quot;:0,&quot;x&quot;:401.70001220703125,&quot;y&quot;:2938.316650390625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-10_row2-col3&quot;,&quot;w&quot;:152.23333740234375,&quot;h&quot;:215.18333435058594,&quot;d&quot;:0,&quot;x&quot;:573.4000244140625,&quot;y&quot;:2938.316650390625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-10_row2-col4&quot;,&quot;w&quot;:152.2333221435547,&quot;h&quot;:215.18333435058594,&quot;d&quot;:0,&quot;x&quot;:745.0999755859375,&quot;y&quot;:2938.316650390625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-10_row2-col5&quot;,&quot;w&quot;:152.23333740234375,&quot;h&quot;:215.18333435058594,&quot;d&quot;:0,&quot;x&quot;:916.7999877929688,&quot;y&quot;:2938.316650390625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-10_row2-col6&quot;,&quot;w&quot;:152.23333740234375,&quot;h&quot;:215.18333435058594,&quot;d&quot;:0,&quot;x&quot;:1088.5,&quot;y&quot;:2938.316650390625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;334c5418-ea9a-49b3-8867-3605849005b9&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:362.933349609375,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:3173.5,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-11&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:362.933349609375,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:3173.5,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-11_row1-col1&quot;,&quot;w&quot;:497.33331298828125,&quot;h&quot;:161.46665954589844,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:3173.5,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-11_row1-col2&quot;,&quot;w&quot;:497.33331298828125,&quot;h&quot;:161.46665954589844,&quot;d&quot;:0,&quot;x&quot;:746.7999877929688,&quot;y&quot;:3173.5,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-11_row2-col1&quot;,&quot;w&quot;:497.33331298828125,&quot;h&quot;:161.4666748046875,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:3354.966552734375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-11_row2-col2&quot;,&quot;w&quot;:497.33331298828125,&quot;h&quot;:161.4666748046875,&quot;d&quot;:0,&quot;x&quot;:746.7999877929688,&quot;y&quot;:3354.966552734375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;9e7e8f90-3e49-489f-bf84-bd2cb684a3aa&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:222.93333435058594,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:3536.433349609375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-15&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:222.93333435058594,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:3536.433349609375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-15_row1-col1&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:202.93333435058594,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:3536.433349609375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;octopus-search-result-card_apb-browse_0&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:2336.933349609375,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:3779.36669921875,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;259fc595-55b4-4de4-be42-9d0267cdeb44&quot;,&quot;w&quot;:1226.6666259765625,&quot;h&quot;:110,&quot;d&quot;:0,&quot;x&quot;:18,&quot;y&quot;:6136.2998046875,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-bottom-1&quot;,&quot;w&quot;:1226.6666259765625,&quot;h&quot;:110,&quot;d&quot;:0,&quot;x&quot;:18,&quot;y&quot;:6136.2998046875,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;acsux-widgets_content-grid_merchandised-search-bottom-1_row1-col1&quot;,&quot;w&quot;:1226.6666259765625,&quot;h&quot;:90,&quot;d&quot;:0,&quot;x&quot;:18,&quot;y&quot;:6136.2998046875,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;osa_browse_banner_2&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:925.9000244140625,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:1367.0999755859375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;osa_browse_banner_3&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:189.10000610351562,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2293,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;osa_browse_banner_4&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:386,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2482.10009765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;osa_browse_banner_5&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:305.3999938964844,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:2868.10009765625,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;osa_browse_banner_6&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:362.933349609375,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:3173.5,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;osa_browse_banner_7&quot;,&quot;w&quot;:1014.6666870117188,&quot;h&quot;:222.93333435058594,&quot;d&quot;:0,&quot;x&quot;:230,&quot;y&quot;:3536.433349609375,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;osa_browse_banner_8&quot;,&quot;w&quot;:1226.6666259765625,&quot;h&quot;:110,&quot;d&quot;:0,&quot;x&quot;:18,&quot;y&quot;:6136.2998046875,&quot;t&quot;:121314,&quot;k&quot;:&quot;ewi&quot;}},{&quot;cel&quot;:{&quot;w&quot;:1263,&quot;h&quot;:7052,&quot;t&quot;:121376,&quot;k&quot;:&quot;doi&quot;}},{&quot;cel&quot;:{&quot;w&quot;:1280,&quot;h&quot;:595,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:122181,&quot;k&quot;:&quot;vpi&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:167,&quot;y&quot;:249,&quot;t&quot;:119534},{&quot;x&quot;:208,&quot;y&quot;:281,&quot;t&quot;:119701},{&quot;x&quot;:415,&quot;y&quot;:349,&quot;t&quot;:119788},{&quot;x&quot;:517,&quot;y&quot;:375,&quot;t&quot;:119885}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:333}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:527,&quot;y&quot;:383,&quot;t&quot;:122550},{&quot;x&quot;:715,&quot;y&quot;:523,&quot;t&quot;:122652},{&quot;x&quot;:727,&quot;y&quot;:554,&quot;t&quot;:122749},{&quot;x&quot;:717,&quot;y&quot;:595,&quot;t&quot;:123120}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:250}},{&quot;cel&quot;:{&quot;k&quot;:&quot;ebl&quot;,&quot;t&quot;:127701,&quot;s&quot;:&quot;default&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:127701}},{&quot;csm&quot;:{&quot;k&quot;:&quot;chk&quot;,&quot;f&quot;:8,&quot;l&quot;:{&quot;csmcount&quot;:132,&quot;cel&quot;:157,&quot;navigation&quot;:2,&quot;csm&quot;:8},&quot;s&quot;:&quot;full&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;foresterPayloadSize&quot;,&quot;t&quot;:0,&quot;value&quot;:10440}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OE/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.csa.prod-375" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;messageId&quot;:&quot;h2k07a-5o9qer-a8enkw-7undht&quot;,&quot;schemaId&quot;:&quot;csa.InternalCounters.2&quot;,&quot;c&quot;:{&quot;Nav:Hmenu:FirstLayerAjax&quot;:{&quot;f&quot;:1},&quot;aui:preload_asks&quot;:{&quot;s&quot;:91,&quot;l&quot;:13,&quot;c&quot;:13},&quot;aui:preload_fulfilled&quot;:{&quot;s&quot;:91,&quot;l&quot;:13,&quot;c&quot;:13}},&quot;timestamp&quot;:&quot;2022-12-11T20:19:20.234Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;renderedToMeaningful&quot;:1039,&quot;renderedToViewed&quot;:1039,&quot;renderedToImpressed&quot;:118240,&quot;schemaId&quot;:&quot;csa.PageImpressed.2&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:19:20.699Z&quot;,&quot;messageId&quot;:&quot;p2sfl0-ayl95k-xmht0i-q2qujk&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;meaningful&quot;:&quot;interactive&quot;,&quot;url&quot;:&quot;https://www.amazon.in/gp/browse.html?node=14156834031&amp;ref_=nav_em__shopall_catpage_0_2_2_9&quot;,&quot;server&quot;:&quot;www.amazon.in&quot;,&quot;path&quot;:&quot;/gp/browse.html&quot;,&quot;referrer&quot;:&quot;https://www.amazon.in/&quot;,&quot;title&quot;:&quot;Amazon Echo: Buy Amazon Echo &amp; Alexa Devices Online in India - Amazon.in&quot;,&quot;transitionType&quot;:&quot;hard&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;,&quot;pageTypeId&quot;:&quot;14156834031&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;air9qp-u3dkv7-ubl4hx-b5uk6w&quot;,&quot;schemaId&quot;:&quot;csa.ContentInteractionsSummary.1&quot;,&quot;w&quot;:{&quot;5fj4fi-xsl7y6-tf6icj-qpydwc&quot;:{&quot;it100&quot;:2111,&quot;it50&quot;:2175,&quot;it0&quot;:2210},&quot;bxg9eq-2hctln-yztjkr-p08pbb&quot;:{&quot;it100&quot;:2121,&quot;it50&quot;:2156,&quot;it0&quot;:2176},&quot;n3piw2-t5fntm-ughmey-d80nyo&quot;:{&quot;it100&quot;:2176,&quot;it0&quot;:2189,&quot;it50&quot;:2190},&quot;xp28t4-uvxmp7-eybpuz-urvjxl&quot;:{&quot;it100&quot;:2176,&quot;it0&quot;:2191,&quot;it50&quot;:2191},&quot;ofyzmt-ie24ba-w80yhx-83zu1o&quot;:{&quot;it100&quot;:2176,&quot;it0&quot;:2191,&quot;it50&quot;:2191},&quot;66ze89-6xqnhr-faeq85-5k8j35&quot;:{&quot;it100&quot;:2177,&quot;it0&quot;:2192,&quot;it50&quot;:2192},&quot;c622t-s7zrq2-sm7eka-3ltlzn&quot;:{&quot;it100&quot;:2178,&quot;it0&quot;:2192,&quot;it50&quot;:2192},&quot;epaa8j-43awf9-3cw9mw-mk8t7n&quot;:{&quot;it100&quot;:2178,&quot;it0&quot;:2192,&quot;it50&quot;:2192},&quot;q6g26g-pzqpg9-xghpop-36nmo0&quot;:{&quot;it100&quot;:2178,&quot;it0&quot;:2192,&quot;it50&quot;:2192},&quot;riby7i-q6w7fz-ji74w7-4wzzks&quot;:{&quot;it100&quot;:2179,&quot;it0&quot;:2193,&quot;it50&quot;:2193},&quot;10c1gl-wlxntk-f2so15-26jact&quot;:{&quot;it100&quot;:2179,&quot;it0&quot;:2193,&quot;it50&quot;:2193},&quot;c42i6d-2691bi-whknu0-3eya2m&quot;:{&quot;it100&quot;:2180,&quot;it0&quot;:2193,&quot;it50&quot;:2193},&quot;hkjlly-ewj44k-179uk3-4g6o93&quot;:{&quot;it100&quot;:2239,&quot;it50&quot;:2272,&quot;it0&quot;:2321},&quot;58jw8j-qrexb1-4rgcd3-i115lv&quot;:{&quot;it100&quot;:2239,&quot;it50&quot;:2273,&quot;it0&quot;:2322},&quot;82w3mn-fs4es3-hgau56-q0q1o6&quot;:{&quot;it100&quot;:2240,&quot;it50&quot;:2274,&quot;it0&quot;:2322},&quot;ubjti8-d6lx66-nal1fv-rglrr9&quot;:{&quot;it100&quot;:2322},&quot;uiccn-h4829c-if5c9e-klygrs&quot;:{&quot;it100&quot;:2323},&quot;phddcd-85t003-qcg0pz-q1224l&quot;:{&quot;it100&quot;:2323},&quot;bvohun-7mkr1g-wq9epz-t7whb2&quot;:{&quot;it100&quot;:2325},&quot;vni164-qclsgv-jq8340-shxa87&quot;:{&quot;ttfv&quot;:123050,&quot;it0&quot;:996},&quot;dpnml5-6mkgd4-24jc7o-c3m5yb&quot;:{&quot;ttfv&quot;:123051,&quot;it0&quot;:995},&quot;t0mgps-ytyz5w-bujqbe-6gw8qe&quot;:{&quot;it100&quot;:995,&quot;it50&quot;:1144},&quot;fe5785-ysrv4h-xqz2y8-lyaxfj&quot;:{&quot;it100&quot;:996,&quot;it50&quot;:1145}},&quot;timestamp&quot;:&quot;2022-12-11T20:19:21.748Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentView.3&quot;,&quot;timeToViewed&quot;:118494,&quot;pageFirstPaintToElementViewed&quot;:123073,&quot;timestamp&quot;:&quot;2022-12-11T20:19:21.962Z&quot;,&quot;messageId&quot;:&quot;naagco-y2jp2u-zgnw6x-bevpb4&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;vni164-qclsgv-jq8340-shxa87&quot;,&quot;contentId&quot;:&quot;amzn1.sym.f7b3c9d6-9808-4c06-bb5d-2cc5e873b765&quot;,&quot;slotId&quot;:&quot;DsUnknown-8&quot;,&quot;type&quot;:&quot;widget&quot;,&quot;painter&quot;:&quot;raw:__EU_leo-widget_1.0&quot;,&quot;iSlotId&quot;:&quot;DsUnknown-8&quot;,&quot;class&quot;:&quot;celwidget pf_rd_p-f7b3c9d6-9808-4c06-bb5d-2cc5e873b765 pf_rd_r-T1C0EPM56E3G4DQYZV8V&quot;,&quot;legacyId&quot;:&quot;b54e2c67-1afd-4ad9-84b3-1d361518c6ab&quot;}}}},{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentView.3&quot;,&quot;timeToViewed&quot;:118495,&quot;pageFirstPaintToElementViewed&quot;:123074,&quot;timestamp&quot;:&quot;2022-12-11T20:19:21.963Z&quot;,&quot;messageId&quot;:&quot;lhfgld-c1tae8-ohpn5b-zhhyy9&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;dpnml5-6mkgd4-24jc7o-c3m5yb&quot;,&quot;class&quot;:&quot;acswidget acswidget-carousel celwidget a-spacing-base acswidget-carousel--shoveler acswidget-carousel--default&quot;,&quot;slotId&quot;:&quot;acsux-widgets_carousel_merchandised-search-4&quot;,&quot;legacyId&quot;:&quot;acsux-widgets_carousel_merchandised-search-4&quot;,&quot;type&quot;:&quot;widget&quot;,&quot;parentId&quot;:&quot;vni164-qclsgv-jq8340-shxa87&quot;}}}},{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentImpressed.2&quot;,&quot;timeToImpressed&quot;:119379,&quot;pageFirstPaintToElementImpressed&quot;:123958,&quot;timestamp&quot;:&quot;2022-12-11T20:19:22.847Z&quot;,&quot;messageId&quot;:&quot;x9ewpz-4ik3nv-yn25w3-mebxtn&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;t0mgps-ytyz5w-bujqbe-6gw8qe&quot;,&quot;contentId&quot;:&quot;amzn1.sym.2a357f61-1b15-4535-8c64-bd2c7f11a315&quot;,&quot;slotId&quot;:&quot;DsUnknown-7&quot;,&quot;type&quot;:&quot;widget&quot;,&quot;painter&quot;:&quot;raw:__EU_leo-widget_1.0&quot;,&quot;iSlotId&quot;:&quot;DsUnknown-7&quot;,&quot;class&quot;:&quot;celwidget pf_rd_p-2a357f61-1b15-4535-8c64-bd2c7f11a315 pf_rd_r-T1C0EPM56E3G4DQYZV8V&quot;,&quot;legacyId&quot;:&quot;9183cb0c-9729-47c5-b638-128d1c02872e&quot;}}}},{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentImpressed.2&quot;,&quot;timeToImpressed&quot;:119387,&quot;pageFirstPaintToElementImpressed&quot;:123966,&quot;timestamp&quot;:&quot;2022-12-11T20:19:22.855Z&quot;,&quot;messageId&quot;:&quot;l2p43p-qe3exk-d87eab-xuotqi&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;fe5785-ysrv4h-xqz2y8-lyaxfj&quot;,&quot;class&quot;:&quot;acswidget acswidget-carousel celwidget a-spacing-base acswidget-carousel--shoveler acswidget-carousel--default&quot;,&quot;slotId&quot;:&quot;acsux-widgets_carousel_merchandised-search-3&quot;,&quot;legacyId&quot;:&quot;acsux-widgets_carousel_merchandised-search-3&quot;,&quot;type&quot;:&quot;widget&quot;,&quot;parentId&quot;:&quot;t0mgps-ytyz5w-bujqbe-6gw8qe&quot;}}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.csa.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OE/-378" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rid&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;sid&quot;:&quot;257-6224871-8744968&quot;,&quot;mid&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;sn&quot;:&quot;www.amazon.in&quot;,&quot;reqs&quot;:[{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Hmenu:MenuAccessibleLatency&quot;,&quot;value&quot;:130738,&quot;t&quot;:130738}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;Nav:Hmenu:FirstLayerSuccessTotalTime&quot;,&quot;value&quot;:11,&quot;t&quot;:130743}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:131842}},{&quot;csm&quot;:{&quot;k&quot;:&quot;chk&quot;,&quot;f&quot;:10,&quot;l&quot;:{&quot;csmcount&quot;:134,&quot;cel&quot;:160,&quot;navigation&quot;:2,&quot;csm&quot;:10},&quot;s&quot;:&quot;full&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;foresterPayloadSize&quot;,&quot;t&quot;:0,&quot;value&quot;:469}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OE/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.csa.prod-379" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;messageId&quot;:&quot;h2k07a-5o9qer-a8enkw-7undht&quot;,&quot;schemaId&quot;:&quot;csa.InternalCounters.2&quot;,&quot;c&quot;:{&quot;Nav:Hmenu:MenuAccessibleLatency&quot;:{&quot;f&quot;:130738},&quot;Nav:Hmenu:FirstLayerSuccessTotalTime&quot;:{&quot;f&quot;:11}},&quot;timestamp&quot;:&quot;2022-12-11T20:19:31.595Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;jtcxuv-vdn4yw-bn6wx3-xkjj6i&quot;,&quot;schemaId&quot;:&quot;csa.ContentLatency.1&quot;,&quot;markers&quot;:{&quot;functional:click&quot;:132711},&quot;timestamp&quot;:&quot;2022-12-11T20:19:31.600Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;n3piw2-t5fntm-ughmey-d80nyo&quot;,&quot;type&quot;:&quot;widget&quot;,&quot;slotId&quot;:&quot;HamburgerMenuDesktop&quot;,&quot;interactionEvents&quot;:&quot;click&quot;,&quot;iSlotId&quot;:&quot;HamburgerMenuDesktop&quot;,&quot;href&quot;:&quot;javascript: void(0)&quot;,&quot;parentId&quot;:&quot;5fj4fi-xsl7y6-tf6icj-qpydwc&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;air9qp-u3dkv7-ubl4hx-b5uk6w&quot;,&quot;schemaId&quot;:&quot;csa.ContentInteractionsSummary.1&quot;,&quot;w&quot;:{&quot;rjb8ia-rif24f-t30p87-kc70we&quot;:{&quot;sid&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;ttfv&quot;:132811}},&quot;timestamp&quot;:&quot;2022-12-11T20:19:31.698Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentView.3&quot;,&quot;timeToViewed&quot;:123,&quot;pageFirstPaintToElementViewed&quot;:132835,&quot;timestamp&quot;:&quot;2022-12-11T20:19:31.724Z&quot;,&quot;messageId&quot;:&quot;6ujb0t-20wu95-o4zbi9-2odhv&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;rjb8ia-rif24f-t30p87-kc70we&quot;,&quot;class&quot;:&quot;celwidget nav-sprite-v1&quot;,&quot;slotId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;legacyId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;type&quot;:&quot;widget&quot;}}}},{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentImpressed.2&quot;,&quot;timeToImpressed&quot;:3122,&quot;pageFirstPaintToElementImpressed&quot;:135834,&quot;timestamp&quot;:&quot;2022-12-11T20:19:34.723Z&quot;,&quot;messageId&quot;:&quot;bej7u0-i84w14-2swha9-8228fo&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;rjb8ia-rif24f-t30p87-kc70we&quot;,&quot;class&quot;:&quot;celwidget nav-sprite-v1&quot;,&quot;slotId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;legacyId&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;type&quot;:&quot;widget&quot;}}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.csa.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.csa.prod-386" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;messageId&quot;:&quot;air9qp-u3dkv7-ubl4hx-b5uk6w&quot;,&quot;schemaId&quot;:&quot;csa.ContentInteractionsSummary.1&quot;,&quot;w&quot;:{&quot;5fj4fi-xsl7y6-tf6icj-qpydwc&quot;:{&quot;it100&quot;:855,&quot;it0&quot;:983},&quot;bxg9eq-2hctln-yztjkr-p08pbb&quot;:{&quot;it100&quot;:866,&quot;it0&quot;:916},&quot;n3piw2-t5fntm-ughmey-d80nyo&quot;:{&quot;it100&quot;:934,&quot;it0&quot;:950},&quot;xp28t4-uvxmp7-eybpuz-urvjxl&quot;:{&quot;it100&quot;:935,&quot;it0&quot;:950},&quot;ofyzmt-ie24ba-w80yhx-83zu1o&quot;:{&quot;it100&quot;:937,&quot;it0&quot;:951},&quot;66ze89-6xqnhr-faeq85-5k8j35&quot;:{&quot;it100&quot;:937,&quot;it0&quot;:952},&quot;c622t-s7zrq2-sm7eka-3ltlzn&quot;:{&quot;it100&quot;:937,&quot;it0&quot;:952},&quot;epaa8j-43awf9-3cw9mw-mk8t7n&quot;:{&quot;it100&quot;:937,&quot;it0&quot;:952},&quot;q6g26g-pzqpg9-xghpop-36nmo0&quot;:{&quot;it100&quot;:938,&quot;it0&quot;:953},&quot;riby7i-q6w7fz-ji74w7-4wzzks&quot;:{&quot;it100&quot;:938,&quot;it0&quot;:953},&quot;10c1gl-wlxntk-f2so15-26jact&quot;:{&quot;it100&quot;:939,&quot;it0&quot;:953},&quot;c42i6d-2691bi-whknu0-3eya2m&quot;:{&quot;it100&quot;:939,&quot;it0&quot;:953},&quot;hkjlly-ewj44k-179uk3-4g6o93&quot;:{&quot;it100&quot;:999,&quot;it50&quot;:1034,&quot;it0&quot;:1482},&quot;58jw8j-qrexb1-4rgcd3-i115lv&quot;:{&quot;it100&quot;:1000,&quot;it50&quot;:1036,&quot;it0&quot;:1486},&quot;82w3mn-fs4es3-hgau56-q0q1o6&quot;:{&quot;it100&quot;:1000,&quot;it50&quot;:1019,&quot;it0&quot;:1448},&quot;ubjti8-d6lx66-nal1fv-rglrr9&quot;:{&quot;it100&quot;:1487},&quot;uiccn-h4829c-if5c9e-klygrs&quot;:{&quot;it100&quot;:1487},&quot;phddcd-85t003-qcg0pz-q1224l&quot;:{&quot;it100&quot;:1487},&quot;bvohun-7mkr1g-wq9epz-t7whb2&quot;:{&quot;it100&quot;:1488}},&quot;timestamp&quot;:&quot;2022-12-11T20:19:35.769Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.csa.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/rd/uedata-387" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">0.233870.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">T1C0EPM56E3G4DQYZV8V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ctb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sc</stringProp>
                  <stringProp name="Argument.value">T1C0EPM56E3G4DQYZV8V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">137528</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">-1967</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hob" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hob</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hoe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hoe</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">137528</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1670789978384</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pty</stringProp>
                  <stringProp name="Argument.value">Landing</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="spty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spty</stringProp>
                  <stringProp name="Argument.value">BrowsePage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pti" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pti</stringProp>
                  <stringProp name="Argument.value">14156834031</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">AAMY482BDTBT2NBW4Y2K</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aftb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aftb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rd/uedata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/gp/browse.html?node=14156834031&amp;ref_=nav_em__shopall_catpage_0_2_2_9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.csa.prod-389" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;messageId&quot;:&quot;kq6o94-eqseb5-dn577h-uv629d&quot;,&quot;schemaId&quot;:&quot;csa.Metric.3&quot;,&quot;metrics&quot;:{&quot;firstInputDelay&quot;:27},&quot;dimensions&quot;:{},&quot;timestamp&quot;:&quot;2022-12-11T20:19:38.327Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;schemaId&quot;:&quot;csa.ContentInteraction.1&quot;,&quot;interaction&quot;:&quot;click&quot;,&quot;interactionData&quot;:{&quot;interactionX&quot;:&quot;312&quot;,&quot;interactionY&quot;:&quot;814&quot;,&quot;parentChain&quot;:&quot;.../DIV/DIV/DIV/DIV/DIV/DIV/DIV/DIV/DIV/DIV/OL/LI/DIV/A/SPAN/SPAN&quot;,&quot;href&quot;:&quot;https://www.amazon.in/dp/B08KGVYX6F/ref=s9_acsd_al_bw_c2_x_0_t?pf_rd_m=A1K21FY43GMZF8&amp;pf_rd_s=merchandised-search-3&amp;pf_rd_r=T1C0EPM56E3G4DQYZV8V&amp;pf_rd_t=101&amp;pf_rd_p=2a357f61-1b15-4535-8c64-bd2c7f11a315&amp;pf_rd_i=14156834031&quot;},&quot;messageId&quot;:&quot;4cssop-rsfldx-occpuu-4jpywi&quot;,&quot;attribution&quot;:&quot;//*[@id=&apos;acs-product-block-0&apos;]/A/SPAN/SPAN[2]&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:19:38.380Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;},&quot;element&quot;:{&quot;id&quot;:&quot;fe5785-ysrv4h-xqz2y8-lyaxfj&quot;,&quot;class&quot;:&quot;acswidget acswidget-carousel celwidget a-spacing-base acswidget-carousel--shoveler acswidget-carousel--default&quot;,&quot;slotId&quot;:&quot;acsux-widgets_carousel_merchandised-search-3&quot;,&quot;legacyId&quot;:&quot;acsux-widgets_carousel_merchandised-search-3&quot;,&quot;type&quot;:&quot;widget&quot;,&quot;parentId&quot;:&quot;t0mgps-ytyz5w-bujqbe-6gw8qe&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;air9qp-u3dkv7-ubl4hx-b5uk6w&quot;,&quot;schemaId&quot;:&quot;csa.ContentInteractionsSummary.1&quot;,&quot;w&quot;:{&quot;fe5785-ysrv4h-xqz2y8-lyaxfj&quot;:{&quot;mc&quot;:1,&quot;it0&quot;:3473,&quot;it50&quot;:2474,&quot;it100&quot;:1988},&quot;t0mgps-ytyz5w-bujqbe-6gw8qe&quot;:{&quot;mc&quot;:1,&quot;it0&quot;:3473,&quot;it50&quot;:2475,&quot;it100&quot;:1988},&quot;ubjti8-d6lx66-nal1fv-rglrr9&quot;:{&quot;it0&quot;:3473,&quot;it50&quot;:3475},&quot;uiccn-h4829c-if5c9e-klygrs&quot;:{&quot;it0&quot;:3473,&quot;it50&quot;:3475},&quot;phddcd-85t003-qcg0pz-q1224l&quot;:{&quot;it0&quot;:3473,&quot;it50&quot;:3475},&quot;bvohun-7mkr1g-wq9epz-t7whb2&quot;:{&quot;it0&quot;:3473,&quot;it50&quot;:3475},&quot;rjb8ia-rif24f-t30p87-kc70we&quot;:{&quot;it0&quot;:3473,&quot;it50&quot;:3475,&quot;it100&quot;:3476},&quot;vni164-qclsgv-jq8340-shxa87&quot;:{&quot;it0&quot;:1973},&quot;dpnml5-6mkgd4-24jc7o-c3m5yb&quot;:{&quot;it0&quot;:1973}},&quot;timestamp&quot;:&quot;2022-12-11T20:19:38.380Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;36wtcx-hbo5c8-qwttji-8dwt6k&quot;,&quot;schemaId&quot;:&quot;csa.Metric.3&quot;,&quot;metrics&quot;:{&quot;documentCumulativeLayoutShiftToFirstInput&quot;:0},&quot;dimensions&quot;:{},&quot;timestamp&quot;:&quot;2022-12-11T20:19:38.383Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;w4z9hl-87rd4m-vphak4-vg4oeu&quot;,&quot;markers&quot;:{&quot;pc&quot;:139495,&quot;tc&quot;:0,&quot;hob&quot;:1970,&quot;hoe&quot;:1972,&quot;ul&quot;:139495},&quot;markerTimestamps&quot;:{&quot;pc&quot;:1670789978384,&quot;tc&quot;:1670789838889,&quot;hob&quot;:1670789840859,&quot;hoe&quot;:1670789840861,&quot;ul&quot;:1670789978384},&quot;navigationStartTimestamp&quot;:&quot;2022-12-11T20:17:18.889Z&quot;,&quot;schemaId&quot;:&quot;csa.PageLatency.5&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:19:38.384Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;h2k07a-5o9qer-a8enkw-7undht&quot;,&quot;schemaId&quot;:&quot;csa.InternalCounters.2&quot;,&quot;c&quot;:{&quot;postbackImageSize&quot;:{&quot;s&quot;:2727,&quot;l&quot;:217,&quot;c&quot;:10},&quot;QF-N:SN:QN:TN&quot;:{&quot;f&quot;:1},&quot;flexigrid:cssGridSupport&quot;:{&quot;f&quot;:1}},&quot;timestamp&quot;:&quot;2022-12-11T20:19:38.385Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;activity&quot;:{&quot;scrollCounts&quot;:4,&quot;reachedDepth&quot;:1011,&quot;horizontalScrollDistance&quot;:0,&quot;dwellTime&quot;:17751,&quot;clientTimeToFirstScroll&quot;:122835},&quot;dimensions&quot;:{&quot;availableScreenWidth&quot;:1280,&quot;availableScreenHeight&quot;:680,&quot;documentWidth&quot;:1263,&quot;documentHeight&quot;:7052,&quot;screenWidth&quot;:1280,&quot;screenHeight&quot;:720,&quot;viewportWidth&quot;:1280,&quot;viewportHeight&quot;:595},&quot;schemaId&quot;:&quot;csa.PageInteractionsSummary.1&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:19:38.390Z&quot;,&quot;messageId&quot;:&quot;y1iauq-rkhfed-llht67-e1i0wf&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;messageId&quot;:&quot;2h08v9-hkktvl-syfb6g-kl3xas&quot;,&quot;schemaId&quot;:&quot;csa.Metric.3&quot;,&quot;metrics&quot;:{&quot;totalBlockingTime&quot;:0,&quot;totalBlockingTimeInclLCP&quot;:0,&quot;maxBlockingTime&quot;:-1},&quot;dimensions&quot;:{},&quot;timestamp&quot;:&quot;2022-12-11T20:19:38.392Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.csa.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:T1C0EPM56E3G4DQYZV8V$uedata=s:%2Frd%2Fuedata%3Ful%26v%3D0.233870.0%26id%3DT1C0EPM56E3G4DQYZV8V%26ctb%3D1%26m%3D1%26sc%3DT1C0EPM56E3G4DQYZV8V%26pc%3D137528%26tc%3D-1967%26hob%3D3%26hoe%3D5%26ul%3D137528%26t%3D1670789978384%26pty%3DLanding%26spty%3DBrowsePage%26pti%3D14156834031%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:137529-388" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OP/A21TJRUUN4KGV:257-6224871-8744968:T1C0EPM56E3G4DQYZV8V$uedata=s:%2Frd%2Fuedata%3Ful%26v%3D0.233870.0%26id%3DT1C0EPM56E3G4DQYZV8V%26ctb%3D1%26m%3D1%26sc%3DT1C0EPM56E3G4DQYZV8V%26pc%3D137528%26tc%3D-1967%26hob%3D3%26hoe%3D5%26ul%3D137528%26t%3D1670789978384%26pty%3DLanding%26spty%3DBrowsePage%26pti%3D14156834031%26tid%3DAAMY482BDTBT2NBW4Y2K%26aftb%3D1:137529</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/batch/1/OE/-391" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rid&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;sid&quot;:&quot;257-6224871-8744968&quot;,&quot;mid&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;sn&quot;:&quot;www.amazon.in&quot;,&quot;reqs&quot;:[{&quot;cel&quot;:{&quot;k&quot;:&quot;efo&quot;,&quot;t&quot;:134057,&quot;s&quot;:&quot;default&quot;}},{&quot;cel&quot;:{&quot;n&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;w&quot;:1262.6666259765625,&quot;h&quot;:595.3333129882812,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:0,&quot;t&quot;:132841,&quot;k&quot;:&quot;ewi&quot;,&quot;cl&quot;:&quot;celwidget nav-sprite-v1&quot;}},{&quot;cel&quot;:{&quot;w&quot;:1280,&quot;h&quot;:595,&quot;x&quot;:0,&quot;y&quot;:111.33333587646484,&quot;t&quot;:135020,&quot;k&quot;:&quot;vpi&quot;}},{&quot;cel&quot;:{&quot;w&quot;:1280,&quot;h&quot;:595,&quot;x&quot;:0,&quot;y&quot;:311.3333435058594,&quot;t&quot;:135153,&quot;k&quot;:&quot;vpi&quot;}},{&quot;cel&quot;:{&quot;w&quot;:1280,&quot;h&quot;:595,&quot;x&quot;:0,&quot;y&quot;:312,&quot;t&quot;:135287,&quot;k&quot;:&quot;vpi&quot;}},{&quot;cel&quot;:{&quot;w&quot;:1280,&quot;h&quot;:595,&quot;x&quot;:0,&quot;y&quot;:382,&quot;t&quot;:135587,&quot;k&quot;:&quot;vpi&quot;}},{&quot;cel&quot;:{&quot;w&quot;:1280,&quot;h&quot;:595,&quot;x&quot;:0,&quot;y&quot;:416,&quot;t&quot;:135739,&quot;k&quot;:&quot;vpi&quot;}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:639,&quot;y&quot;:591,&quot;t&quot;:134206},{&quot;x&quot;:636,&quot;y&quot;:500,&quot;t&quot;:134292},{&quot;x&quot;:609,&quot;y&quot;:460,&quot;t&quot;:134373},{&quot;x&quot;:595,&quot;y&quot;:457,&quot;t&quot;:134489},{&quot;x&quot;:595,&quot;y&quot;:442,&quot;t&quot;:134609},{&quot;x&quot;:609,&quot;y&quot;:428,&quot;t&quot;:134772},{&quot;x&quot;:607,&quot;y&quot;:835,&quot;t&quot;:135651},{&quot;x&quot;:481,&quot;y&quot;:803,&quot;t&quot;:135837}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:333}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mcm&quot;,&quot;w&quot;:1263,&quot;h&quot;:7052,&quot;t&quot;:137453,&quot;x&quot;:312,&quot;y&quot;:814,&quot;p&quot;:&quot;//*[@id=&apos;acs-product-block-0&apos;]/A/SPAN/SPAN[2]&quot;,&quot;n&quot;:&quot;SPAN&quot;,&quot;dt&quot;:30,&quot;c&quot;:[&quot;a-truncate-cut&quot;]}},{&quot;cel&quot;:{&quot;n&quot;:&quot;Navigation-desktop-HamburgerMenu&quot;,&quot;w&quot;:1262.6666259765625,&quot;h&quot;:595.3333129882812,&quot;d&quot;:0,&quot;x&quot;:0,&quot;y&quot;:416,&quot;t&quot;:137512,&quot;k&quot;:&quot;ewi&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;postbackImageSize&quot;,&quot;value&quot;:217,&quot;t&quot;:137528}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;QF-N:SN:QN:TN&quot;,&quot;value&quot;:1,&quot;t&quot;:137529}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.PDM.TotalExecutions&quot;,&quot;value&quot;:36,&quot;t&quot;:137537}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.VPI.TotalExecutions&quot;,&quot;value&quot;:10,&quot;t&quot;:137537}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.VPI.TotalExecutionTime&quot;,&quot;value&quot;:0,&quot;t&quot;:137537}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.VPI.AverageExecutionTime&quot;,&quot;value&quot;:0,&quot;t&quot;:137538}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;cel.widgets.batchesProcessed&quot;,&quot;value&quot;:31,&quot;t&quot;:137538}},{&quot;cel&quot;:{&quot;k&quot;:&quot;mmm1&quot;,&quot;e&quot;:[{&quot;x&quot;:462,&quot;y&quot;:798,&quot;t&quot;:135871},{&quot;x&quot;:336,&quot;y&quot;:753,&quot;t&quot;:136123},{&quot;x&quot;:305,&quot;y&quot;:739,&quot;t&quot;:136240},{&quot;x&quot;:310,&quot;y&quot;:808,&quot;t&quot;:136520},{&quot;x&quot;:312,&quot;y&quot;:814,&quot;t&quot;:136637},{&quot;x&quot;:312,&quot;y&quot;:814,&quot;t&quot;:137538}],&quot;min&quot;:0,&quot;max&quot;:1000,&quot;avg&quot;:285}},{&quot;cel&quot;:{&quot;k&quot;:&quot;hrt&quot;,&quot;t&quot;:137539}},{&quot;cel&quot;:{&quot;k&quot;:&quot;eod&quot;,&quot;t0&quot;:1670789840856,&quot;t&quot;:137539}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;armored-cxguardrails.unresponsive-clicks.violations&quot;,&quot;value&quot;:0,&quot;t&quot;:137539}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;armored-cxguardrails.unresponsive-clicks.violationRate&quot;,&quot;value&quot;:0,&quot;t&quot;:137540}},{&quot;csm&quot;:{&quot;k&quot;:&quot;chk&quot;,&quot;f&quot;:11,&quot;l&quot;:{&quot;csmcount&quot;:143,&quot;cel&quot;:173,&quot;navigation&quot;:2,&quot;csm&quot;:11},&quot;s&quot;:&quot;full&quot;}},{&quot;csmcount&quot;:{&quot;counter&quot;:&quot;foresterPayloadSize&quot;,&quot;t&quot;:0,&quot;value&quot;:2418}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fls-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/batch/1/OE/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/dp/B08KGVYX6F/ref=s9_acsd_al_bw_c2_x_0_t-390" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pf_rd_m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pf_rd_m</stringProp>
                  <stringProp name="Argument.value">A1K21FY43GMZF8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pf_rd_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pf_rd_s</stringProp>
                  <stringProp name="Argument.value">merchandised-search-3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pf_rd_r" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pf_rd_r</stringProp>
                  <stringProp name="Argument.value">T1C0EPM56E3G4DQYZV8V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pf_rd_t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pf_rd_t</stringProp>
                  <stringProp name="Argument.value">101</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pf_rd_p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pf_rd_p</stringProp>
                  <stringProp name="Argument.value">2a357f61-1b15-4535-8c64-bd2c7f11a315</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pf_rd_i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pf_rd_i</stringProp>
                  <stringProp name="Argument.value">14156834031</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dp/B08KGVYX6F/ref=s9_acsd_al_bw_c2_x_0_t</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/gp/browse.html?node=14156834031&amp;ref_=nav_em__shopall_catpage_0_2_2_9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.csa.prod-392" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;messageId&quot;:&quot;h2k07a-5o9qer-a8enkw-7undht&quot;,&quot;schemaId&quot;:&quot;csa.InternalCounters.2&quot;,&quot;c&quot;:{&quot;cel.PDM.TotalExecutions&quot;:{&quot;f&quot;:36},&quot;cel.VPI.TotalExecutions&quot;:{&quot;f&quot;:10},&quot;cel.VPI.TotalExecutionTime&quot;:{&quot;f&quot;:0},&quot;cel.VPI.AverageExecutionTime&quot;:{&quot;f&quot;:0},&quot;cel.widgets.batchesProcessed&quot;:{&quot;f&quot;:31},&quot;armored-cxguardrails.unresponsive-clicks.violations&quot;:{&quot;f&quot;:0},&quot;armored-cxguardrails.unresponsive-clicks.violationRate&quot;:{&quot;f&quot;:0}},&quot;timestamp&quot;:&quot;2022-12-11T20:19:38.394Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.csa.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/41XVFuR4%2BFL.js-394" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonPopoversAUIShim" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonPopoversAUIShim</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/41XVFuR4%2BFL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01j2xsQ1yML._RC%7C01CKJhJm3ZL.css,01bTUA%203s-L.css,01CHSSMW4hL.css_.css-395" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMetaAssetFixed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMetaAssetFixed</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01j2xsQ1yML._RC%7C01CKJhJm3ZL.css,01bTUA%203s-L.css,01CHSSMW4hL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/11ZsAb1tv9L._RC%7C11B3-fvRFzL.css_.css-396" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonUICalendar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUICalendar</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/11ZsAb1tv9L._RC%7C11B3-fvRFzL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01eviB7YqCL.css-397" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageTwisterPlusAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageTwisterPlusAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01eviB7YqCL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/1149NfT98YL.css-398" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsSolutionAreaCardsWidgetAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsSolutionAreaCardsWidgetAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="B/Bk9TJn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">B/Bk9TJn</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/1149NfT98YL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/21E2aIDj6DL._RC%7C11qajewhV-L.js,016QFWAAdML.js_.js-399" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonDevicesDetailPageCriticalAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonDevicesDetailPageCriticalAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/21E2aIDj6DL._RC%7C11qajewhV-L.js,016QFWAAdML.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01SXjgkqR1L.css-401" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsJumpLinksWidgetAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsJumpLinksWidgetAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="SbTUp9eD" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SbTUp9eD</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01SXjgkqR1L.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01rg6Ce9FhL.js-407" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageEverywhereMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageEverywhereMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01rg6Ce9FhL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/21bq2kGR4iL.css-402" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsFamilyStripeWidgetAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsFamilyStripeWidgetAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/21bq2kGR4iL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01bKZ5YJkqL.css-406" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsPickAVersionWidgetAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsPickAVersionWidgetAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01bKZ5YJkqL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/31cu23aPw1L.js-408" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonUICalendar" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonUICalendar</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/31cu23aPw1L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/51BlbNtgLsL.js-409" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageTwisterPlusAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageTwisterPlusAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="9b+X861u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">9b+X861u</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/51BlbNtgLsL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/61musUG6N5L._RC%7C31A52z1EqCL.js,01PQKs49DyL.js_.js-403" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopImageBlockMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopImageBlockMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="BwTtR78R" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">BwTtR78R</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/61musUG6N5L._RC%7C31A52z1EqCL.js,01PQKs49DyL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01I3s4SlPiL._RC%7C21m2xTnRTNL.js,216Y5JcOfSL.js,01Gujc1zuyL.js,51b5-qhtEFL.js_.js-411" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageMetaAssetFixed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageMetaAssetFixed</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="w8Evkym0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">w8Evkym0</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01I3s4SlPiL._RC%7C21m2xTnRTNL.js,216Y5JcOfSL.js,01Gujc1zuyL.js,51b5-qhtEFL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01DtHM8omLL.css-412" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopImageBlockMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopImageBlockMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01DtHM8omLL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/315GMAwkLiL._RC%7C017KStdmPkL.css_.css-413" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonDevicesDetailPageCriticalAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonDevicesDetailPageCriticalAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/315GMAwkLiL._RC%7C017KStdmPkL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/21GZotI4w2L.css-405" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsInteractWithAlexaWidgetAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsInteractWithAlexaWidgetAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/21GZotI4w2L.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/41Eo-GzE%2BRL.css-414" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopConfiguratorMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopConfiguratorMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="mFf8eXdg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mFf8eXdg</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/41Eo-GzE%2BRL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01XeaBjpTsL.css-415" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageStorePickupAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageStorePickupAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01XeaBjpTsL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01eTb8DvDlL.css-416" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsDeviceUpgraderAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsDeviceUpgraderAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01eTb8DvDlL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/11hlEWdpPvL._RC%7C41Yejih5HsL.css_.css-419" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AskAuiAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/AskAuiAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/11hlEWdpPvL._RC%7C41Yejih5HsL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/61oUTYAQNHL.js-418" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageAllOffersDisplayAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageAllOffersDisplayAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="XvgcJJyT" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">XvgcJJyT</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/61oUTYAQNHL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01S0FvfmVGL.js-421" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/InstallmentPaymentDetailPageMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/InstallmentPaymentDetailPageMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01S0FvfmVGL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/51DA5Pp5OpL._RC%7C01-kD-QXKTL.js_.js-422" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageDesktopConfiguratorMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageDesktopConfiguratorMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/51DA5Pp5OpL._RC%7C01-kD-QXKTL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01STrEog8JL._RC%7C015DCfR%20jFL.css,01LKsGfpclL.css,41V7rn1NJUL.css,01cdXa5nSoL.css_.css-420" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DesktopMedleyFilteringMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DesktopMedleyFilteringMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="puKwYNyZ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">puKwYNyZ</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01STrEog8JL._RC%7C015DCfR%20jFL.css,01LKsGfpclL.css,41V7rn1NJUL.css,01cdXa5nSoL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/31eNPn--XJL.js-424" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPagePostPurchaseAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPagePostPurchaseAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/31eNPn--XJL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01Io73Ll09L.css-425" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPagePostPurchaseAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPagePostPurchaseAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01Io73Ll09L.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/61kg-9sJ24L.css-426" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonDevicesDetailPageLegacyAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonDevicesDetailPageLegacyAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/61kg-9sJ24L.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/61%2BVi9Pq%2ByL.js-427" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonDevicesDetailPageLegacyAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonDevicesDetailPageLegacyAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/61%2BVi9Pq%2ByL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/31gw8TiisXL.js-429" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/TwisterCoreAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/TwisterCoreAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/31gw8TiisXL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.csa.prod-393" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;data&quot;:{&quot;messageId&quot;:&quot;2h08v9-hkktvl-syfb6g-kl3xas&quot;,&quot;schemaId&quot;:&quot;csa.Metric.3&quot;,&quot;metrics&quot;:{&quot;totalBlockingTime&quot;:0,&quot;totalBlockingTimeInclLCP&quot;:0,&quot;maxBlockingTime&quot;:-1},&quot;dimensions&quot;:{},&quot;timestamp&quot;:&quot;2022-12-11T20:19:41.323Z&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}},{&quot;data&quot;:{&quot;activity&quot;:{&quot;scrollCounts&quot;:0,&quot;reachedDepth&quot;:1011,&quot;horizontalScrollDistance&quot;:0,&quot;dwellTime&quot;:2935},&quot;dimensions&quot;:{&quot;availableScreenWidth&quot;:1280,&quot;availableScreenHeight&quot;:680,&quot;documentWidth&quot;:1263,&quot;documentHeight&quot;:7052,&quot;screenWidth&quot;:1280,&quot;screenHeight&quot;:720,&quot;viewportWidth&quot;:1280,&quot;viewportHeight&quot;:595},&quot;schemaId&quot;:&quot;csa.PageInteractionsSummary.1&quot;,&quot;timestamp&quot;:&quot;2022-12-11T20:19:41.325Z&quot;,&quot;messageId&quot;:&quot;u1iroh-pvy0re-xrg15t-lte1tw&quot;,&quot;application&quot;:&quot;Retail:Prod:www.amazon.in&quot;,&quot;obfuscatedMarketplaceId&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;producerId&quot;:&quot;csa&quot;,&quot;entities&quot;:{&quot;page&quot;:{&quot;id&quot;:&quot;vj5mot-yy0ku7-yxligb-ht7cqo&quot;,&quot;requestId&quot;:&quot;T1C0EPM56E3G4DQYZV8V&quot;,&quot;pageType&quot;:&quot;Landing&quot;,&quot;subPageType&quot;:&quot;BrowsePage&quot;},&quot;session&quot;:{&quot;id&quot;:&quot;257-6224871-8744968&quot;}}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.csa.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/31LLifYSwNL.js-428" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageTwisterViewAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageTwisterViewAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/31LLifYSwNL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/712kzkWoiSL.js-430" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageTwisterAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageTwisterAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="q3JHPjIS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q3JHPjIS</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/712kzkWoiSL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/31hkAwbXOlL.js-431" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/PageRefreshAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/PageRefreshAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/31hkAwbXOlL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/21q6fNgsQrL._RC%7C21XJFDMQuNL.js,11OyIHCq0lL.js_.js-432" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/HardlinesFeatureDetailPageMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/HardlinesFeatureDetailPageMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/21q6fNgsQrL._RC%7C21XJFDMQuNL.js,11OyIHCq0lL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/11cOIORLeLL._RC%7C01Z3lE5tzaL.css,01ng-wbWRnL.css,01%20KRP2j52L.css,21rTDEf7o3L.css,41pvMQl-s2L.css,61JfkIPUguL.css,11bRdV2t20L.css,518KmQy9QVL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11dsywhn-BL.css,51NVMnqhh%20L.css,11mBY91Tk3L.css,11lASj43GPL.css,218Y6Z0tipL.css,31l-Nc5zsiL.css,114HJAY%20ShL.css,01vUDet4b1L.css,01ZGRKhIG-L.css,31i8uLJOTIL.css,31GzsIW0LdL.css,01wsp46SQTL.css,11kmwdXfY5L.css,011uHgmxBfL.css,21ZjVyQPjML.css,01TRklY0EKL.css,31Xq0DzIe3L.css,11sPGn3%20LdL.css,215GkWGdk7L.css,211EHwuLWIL.css,21S-fMo6LAL.css,01TrKJuj6JL.css,0171-O%20nBwL.css,21-1CDsoZDL.css,01P0iSwDaIL.css,01DMQNFrEtL.css,21pN8y-Z0zL.css,01bCxLIcgEL.css,21ptTt8GCSL.css_.css-410" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonDevicesDetailPageNonCriticalAssets_MAKO_SOPP_WEB_INDIA_431364_T1_ADD_AOD_INGRESS_ASSET_T1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonDevicesDetailPageNonCriticalAssets_MAKO_SOPP_WEB_INDIA_431364_T1_ADD_AOD_INGRESS_ASSET_T1</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="jPOV5569" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jPOV5569</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/11cOIORLeLL._RC%7C01Z3lE5tzaL.css,01ng-wbWRnL.css,01%20KRP2j52L.css,21rTDEf7o3L.css,41pvMQl-s2L.css,61JfkIPUguL.css,11bRdV2t20L.css,518KmQy9QVL.css,01rdVnPkgmL.css,01KvCqKMBgL.css,11dsywhn-BL.css,51NVMnqhh%20L.css,11mBY91Tk3L.css,11lASj43GPL.css,218Y6Z0tipL.css,31l-Nc5zsiL.css,114HJAY%20ShL.css,01vUDet4b1L.css,01ZGRKhIG-L.css,31i8uLJOTIL.css,31GzsIW0LdL.css,01wsp46SQTL.css,11kmwdXfY5L.css,011uHgmxBfL.css,21ZjVyQPjML.css,01TRklY0EKL.css,31Xq0DzIe3L.css,11sPGn3%20LdL.css,215GkWGdk7L.css,211EHwuLWIL.css,21S-fMo6LAL.css,01TrKJuj6JL.css,0171-O%20nBwL.css,21-1CDsoZDL.css,01P0iSwDaIL.css,01DMQNFrEtL.css,21pN8y-Z0zL.css,01bCxLIcgEL.css,21ptTt8GCSL.css_.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/41BF43Fzb7L._RC%7C51tZ6-g6eTL.js,01wFfxST%20ZL.js,018-nGQj6aL.js,11Xxd-w8V7L.js,310iK-j-fuL.js,01ZuRUaOlqL.js,216mhluQMRL.js,11VUI-g9IDL.js,51AHiFvP2iL.js,21rKaiHqdlL.js,21VnZkpxyEL.js,31oAl8dJC2L.js,41OrMtXIGBL.js,41PCCMyDBzL.js,71lnaM8NaVL.js,31M1ip8KkoL.js,31YAhTeCFDL.js,31Nb5hZQizL.js,41lkyHEebjL.js,11PUEGgF9FL.js,01JzE3-DfLL.js,01WNBm1NhqL.js,41Dds42UuNL.js,01TQyo0bnIL.js,21JO8Cf4KLL.js,61BNAItyTjL.js,21mCCgLkhpL.js,01GhKb2usNL.js,111zW1Nhl9L.js,013eoEBTVUL.js,01trOMcov6L.js,21F%202VGtGTL.js,014kCoIHgIL.js,01XgHyauQVL.js,11%20G2VqmH4L.js,31EFtqFUPbL.js,21YblE14ZTL.js,01f8pq9lNGL.js,412nrwABhFL.js,51yKEFJ8SzL.js,01j5DeZSMzL.js,31nmhNJL7CL.js,41yGIeBtQ0L.js,31IpDiN7OcL.js,11LSI8IU0NL.js,011VhuFIPDL.js,51F5zCPSeSL.js,01uGhm7R-OL.js,01tx7ThnHlL.js,314KUnfp3%20L.js,21rKj0pl6mL.js,01cOcwrw2%20L.js,310-2ScEiIL.js,016G7uDqQML.js_.js-417" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AmazonDevicesDetailPageNonCriticalAssets_MAKO_SOPP_WEB_INDIA_431364_T1_ADD_AOD_INGRESS_ASSET_T1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/AmazonDevicesDetailPageNonCriticalAssets_MAKO_SOPP_WEB_INDIA_431364_T1_ADD_AOD_INGRESS_ASSET_T1</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="%20w2udO8f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">%20w2udO8f</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/41BF43Fzb7L._RC%7C51tZ6-g6eTL.js,01wFfxST%20ZL.js,018-nGQj6aL.js,11Xxd-w8V7L.js,310iK-j-fuL.js,01ZuRUaOlqL.js,216mhluQMRL.js,11VUI-g9IDL.js,51AHiFvP2iL.js,21rKaiHqdlL.js,21VnZkpxyEL.js,31oAl8dJC2L.js,41OrMtXIGBL.js,41PCCMyDBzL.js,71lnaM8NaVL.js,31M1ip8KkoL.js,31YAhTeCFDL.js,31Nb5hZQizL.js,41lkyHEebjL.js,11PUEGgF9FL.js,01JzE3-DfLL.js,01WNBm1NhqL.js,41Dds42UuNL.js,01TQyo0bnIL.js,21JO8Cf4KLL.js,61BNAItyTjL.js,21mCCgLkhpL.js,01GhKb2usNL.js,111zW1Nhl9L.js,013eoEBTVUL.js,01trOMcov6L.js,21F%202VGtGTL.js,014kCoIHgIL.js,01XgHyauQVL.js,11%20G2VqmH4L.js,31EFtqFUPbL.js,21YblE14ZTL.js,01f8pq9lNGL.js,412nrwABhFL.js,51yKEFJ8SzL.js,01j5DeZSMzL.js,31nmhNJL7CL.js,41yGIeBtQ0L.js,31IpDiN7OcL.js,11LSI8IU0NL.js,011VhuFIPDL.js,51F5zCPSeSL.js,01uGhm7R-OL.js,01tx7ThnHlL.js,314KUnfp3%20L.js,21rKj0pl6mL.js,01cOcwrw2%20L.js,310-2ScEiIL.js,016G7uDqQML.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/31GKVWZedHL.css-400" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageAllOffersDisplayAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageAllOffersDisplayAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/31GKVWZedHL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/21oQbXM1MQL.css-404" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsContentGridAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsContentGridAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="YMUjq58M" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">YMUjq58M</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/21oQbXM1MQL.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/canonical.html-435" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/canonical.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-444" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv4</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-447" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv6</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/218bBmT6YFL.js-423" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DetailPageStorePickupAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DetailPageStorePickupAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/218bBmT6YFL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/ZGNiY2Q1MzUt-456" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/ZGNiY2Q1MzUt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/311Q96ozekL.js-458" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsContentGridAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsContentGridAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="YMUjq58M" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">YMUjq58M</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/311Q96ozekL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/11YKaGdd5YL.js-462" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsInteractWithAlexaWidgetAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsInteractWithAlexaWidgetAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/11YKaGdd5YL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/319oKquzx6L.js-463" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsPickAVersionWidgetAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsPickAVersionWidgetAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/319oKquzx6L.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/S/sash/Dv1WQ5DdeMS5qP7.woff2-465" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/S/sash/Dv1WQ5DdeMS5qP7.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://m.media-amazon.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01L8DUfzNmL.js-470" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsJumpLinksWidgetAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsJumpLinksWidgetAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="4JcyyIq3" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">4JcyyIq3</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01L8DUfzNmL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/01MzMzfZPrL.js-471" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsUtilityAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsUtilityAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/01MzMzfZPrL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/41JjOv0Q3DL.js-472" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsSolutionAreaCardsWidgetAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsSolutionAreaCardsWidgetAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="B/Bk9TJn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">B/Bk9TJn</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/41JjOv0Q3DL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/S/sash/2SazJx$EeTHfhMN.woff2-473" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/S/sash/2SazJx$EeTHfhMN.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://m.media-amazon.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/21xq+q3WVUL.js-474" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/MarsDeviceUpgraderAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/MarsDeviceUpgraderAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/21xq+q3WVUL.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/31WkIngSZbL._RC%7C61lBOi8qNLL.js_.js-475" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/AskAuiAssets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/AskAuiAssets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/31WkIngSZbL._RC%7C61lBOi8qNLL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/I/41PgtBPkB8L._RC%7C01HLxsL-v8L.js,11KGVmb0nxL.js,41uK3DtcmfL.js,31QxfHPL6DL.js_.js-476" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AUIClients/DesktopMedleyFilteringMetaAsset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AUIClients/DesktopMedleyFilteringMetaAsset</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="pjDgm75N" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pjDgm75N</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">images-eu.ssl-images-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/I/41PgtBPkB8L._RC%7C01HLxsL-v8L.js,11KGVmb0nxL.js,41uK3DtcmfL.js,31QxfHPL6DL.js_.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/canonical.html-478" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/canonical.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-479" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv6</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-480" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv4</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/01/share-icons/share-std.svg-488" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/01/share-icons/share-std.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/Y2M5NWQ2NmMt-486" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/Y2M5NWQ2NmMt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/canonical.html-491" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/canonical.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/ZDk0Y2Q1OTQt-490" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/ZDk0Y2Q1OTQt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-495" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv6</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-494" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv4</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/ZTAwMmFjMTQt-493" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/ZTAwMmFjMTQt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/MTY3Yjg4ZTAt-496" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/MTY3Yjg4ZTAt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/YzRlYjAxY2Et-492" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/YzRlYjAxY2Et</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/NWQzNzgzOWYt-497" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/NWQzNzgzOWYt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/gp/product/ajax-489" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="asin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">asin</stringProp>
                  <stringProp name="Argument.value">B08KGVYX6F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="showFeatures" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">showFeatures</stringProp>
                  <stringProp name="Argument.value">inEmiPopOver-fetch%2Cinemi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="deviceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">deviceType</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="experienceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">experienceId</stringProp>
                  <stringProp name="Argument.value">emiMenueSVAjaxExperience</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="merchantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">merchantId</stringProp>
                  <stringProp name="Argument.value">A14CZOWI0VEHLG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/gp/product/ajax</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/dp/B08KGVYX6F/ref=s9_acsd_al_bw_c2_x_0_t?pf_rd_m=A1K21FY43GMZF8&amp;pf_rd_s=merchandised-search-3&amp;pf_rd_r=T1C0EPM56E3G4DQYZV8V&amp;pf_rd_t=101&amp;pf_rd_p=2a357f61-1b15-4535-8c64-bd2c7f11a315&amp;pf_rd_i=14156834031</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/MjU2NmJjNzMt-499" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/MjU2NmJjNzMt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/NzI3YzdhMDEt-498" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/NzI3YzdhMDEt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/ZTRmYjk3YzYt-500" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/31/kindle/journeys/2FTxq92FDulmt3Q9KXNExiZJ9DxFx4VY4ayn2mqBLyL0k3D/ZTRmYjk3YzYt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/events/com.amazon.csm.nexusclient.prod-485" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;cs&quot;:{&quot;dct&quot;:{&quot;#0&quot;:&quot;requestId&quot;,&quot;#1&quot;:&quot;HN997FZJENE797WEBRHK&quot;,&quot;#2&quot;:&quot;server&quot;,&quot;#3&quot;:&quot;www.amazon.in&quot;,&quot;#4&quot;:&quot;obfuscatedMarketplaceId&quot;,&quot;#5&quot;:&quot;A21TJRUUN4KGV&quot;,&quot;#6&quot;:&quot;producerId&quot;,&quot;#7&quot;:&quot;csm&quot;,&quot;#8&quot;:&quot;schemaId&quot;,&quot;#9&quot;:&quot;csm.CSMBaselineEvent.4&quot;,&quot;#10&quot;:&quot;timestamp&quot;,&quot;#11&quot;:&quot;messageId&quot;,&quot;#12&quot;:&quot;sessionId&quot;,&quot;#13&quot;:&quot;257-6224871-8744968&quot;}},&quot;events&quot;:[{&quot;data&quot;:{&quot;#0&quot;:&quot;#1&quot;,&quot;#2&quot;:&quot;#3&quot;,&quot;#4&quot;:&quot;#5&quot;,&quot;#6&quot;:&quot;#7&quot;,&quot;#8&quot;:&quot;#9&quot;,&quot;#10&quot;:&quot;2022-12-11T20:19:58.853Z&quot;,&quot;#11&quot;:&quot;HN997FZJENE797WEBRHK-1670789998853-1365766289&quot;,&quot;#12&quot;:&quot;#13&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">unagi-eu.amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/events/com.amazon.csm.nexusclient.prod</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/2017/suggestions-487" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">completion.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/2017/suggestions</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/hctp/log/refMarker-504" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ref_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref_</stringProp>
                  <stringProp name="Argument.value">PREREGISTRATION_B08KGVYX6F_AL_ASSETS_INITIALIZED</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/hctp/log/refMarker</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/dp/B08KGVYX6F/ref=s9_acsd_al_bw_c2_x_0_t?pf_rd_m=A1K21FY43GMZF8&amp;pf_rd_s=merchandised-search-3&amp;pf_rd_r=T1C0EPM56E3G4DQYZV8V&amp;pf_rd_t=101&amp;pf_rd_p=2a357f61-1b15-4535-8c64-bd2c7f11a315&amp;pf_rd_i=14156834031</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/hctp/log/refMarker-503" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ref_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref_</stringProp>
                  <stringProp name="Argument.value">PREREGISTRATION_B08KGVYX6F_GIFTING_AL_LOADED</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/hctp/log/refMarker</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/dp/B08KGVYX6F/ref=s9_acsd_al_bw_c2_x_0_t?pf_rd_m=A1K21FY43GMZF8&amp;pf_rd_s=merchandised-search-3&amp;pf_rd_r=T1C0EPM56E3G4DQYZV8V&amp;pf_rd_t=101&amp;pf_rd_p=2a357f61-1b15-4535-8c64-bd2c7f11a315&amp;pf_rd_i=14156834031</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/hctp/log/refMarker-505" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ref_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref_</stringProp>
                  <stringProp name="Argument.value">PREREGISTRATION_B08KGVYX6F_DEFAULT_AL_ASSETS_INITIALIZED</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/hctp/log/refMarker</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.amazon.in/dp/B08KGVYX6F/ref=s9_acsd_al_bw_c2_x_0_t?pf_rd_m=A1K21FY43GMZF8&amp;pf_rd_s=merchandised-search-3&amp;pf_rd_r=T1C0EPM56E3G4DQYZV8V&amp;pf_rd_t=101&amp;pf_rd_p=2a357f61-1b15-4535-8c64-bd2c7f11a315&amp;pf_rd_i=14156834031</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/e/xsp/getAdj-481" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="placementId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">placementId</stringProp>
                  <stringProp name="Argument.value">c9a09184-bad8-4206-80a7-f9db64ba2bb1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                  <stringProp name="Argument.value">511</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="slot" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">slot</stringProp>
                  <stringProp name="Argument.value">customer-reviews-top</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">0101791d97c33c7d7102018027395cf6d6344b16977fe48a559576cc8d5a09b20135</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rj" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rj</stringProp>
                  <stringProp name="Argument.value">%7B%7D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">aax_xsp_render_ad</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aax-eu.amazon.in</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/e/xsp/getAdj</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://images-eu.ssl-images-amazon.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/31/perc/prime-logo.svg-511" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/31/perc/prime-logo.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://images-eu.ssl-images-amazon.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/images/G/01/AUIClients/AmazonUIFont-amazonember_rg-cc7ebaa05a2cd3b02c0929ac0475a44ab30b7efa._V2_.woff2-514" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">m.media-amazon.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/images/G/01/AUIClients/AmazonUIFont-amazonember_rg-cc7ebaa05a2cd3b02c0929ac0475a44ab30b7efa._V2_.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://images-eu.ssl-images-amazon.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://images-eu.ssl-images-amazon.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">1111</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-314244359">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2|jpg|txt)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
